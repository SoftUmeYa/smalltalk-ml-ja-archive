From kuwatani ＠ akademia.co.jp  Tue Jul  4 12:15:00 2006
From: kuwatani ＠ akademia.co.jp (Tsuyoshi KUWATANI)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3029] サーバーメンテナンスのお知らせ
Message-ID: <44A9DD34.6030305@akademia.co.jp>

Squeak-ja登録メンバーのみなさま

MLの管理をしています 桑谷 です．
お世話になります．

この度，下記の日程で弊社サーバーのメンテナンスを行うこととなりました．
この間，メールを使用できなくなる時間帯がありますが，できる限り
ご迷惑のかからないよう作業を進めていきますので，ご了承のほど
よろしくお願いいたします．

                              記

        日時：7月7日(金) 8:00〜11:00
        場所：ML運用サーバー
        内容：サーバーのハードウェアメンテナンス

                                                         以上
--
桑谷 剛史＠ML管理






From ka.minami ＠ nifty.com  Sat Jul  8 00:59:55 2006
From: ka.minami ＠ nifty.com (Kazuki Minamitani)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3030] [Update] SqSquare BETA2 release
Message-ID: <9CC6A1DE63C05Aka.minami@nifty.com>

こんにちは
南谷です。


先日アナウンスさせていただいたSqSquareですが、
クライアント側、サーバ側ともにアップデートいたしました。

よろしければお試しください。


- 主な変更点
  - アクティブユーザから確認できるようになった
    - Webブラウザで、ボード一覧画面にアクセスすると確認できます
  - ボードのロールバック機能の追加（管理者機能）
    - 任意の時点までボードの状態を差し戻せるようになりました


- リンク
  SqSquareダウンロードとインストール
  http://www.sqsq.jp/SqSquare/13
  
  SqSquare Demo
  http://www.sqsq.jp:9092/seaside/SqSquare  



SqSquareチーム
南谷千城, 梅澤真史

From scriptonwikipage ＠ yahoo.co.jp  Sat Jul  8 16:36:50 2006
From: scriptonwikipage ＠ yahoo.co.jp (scriptonwikipage@yahoo.co.jp)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3031] Wiki としての SuperSwiki
Message-ID: <20060708073650.6929.qmail@web2915.mail.tnz.yahoo.co.jp>

はじめて投稿します。中田と申します。

異分野からの参加です。
私は、いろいろあるWikiを比較しており、
その中でSwikiの存在を知りました。

早速ですが、教えていただきたいことがあります。

-----
Swikiには、プラグインの仕組みは、ありますでしょうか。
また、それはどのようなものでしょうか。
-----

Wikiクローンの一つであるWifkyにはWifkyページとして
書かれたスクリプト(Perlですが)を、実行できるプラグイン
があります。

((perl ページ名 引数1 引数2 …))

WikiはWebブラウザ上でページを編集・作成できるツールです
ので、
上のプラグインを使えば、プラグインの開発・編集も
Webブラウザ上でできるという、優れものです。

http://wifky.sourceforge.jp/cgi-bin/index.cgi?p=(2006.06.17)+%A5%DA%A1%BC%A5%B8%C6%E2%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8%BC%C2%B9%D4%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3%A4%F2%B8%F8%B3%AB%A4%B7%A4%DE%A4%B7%A4%BF%A1%A3
http://wifky.sourceforge.jp/cgi-bin/index.cgi?p=%5Bplugin%5D+%A5%DA%A1%BC%A5%B8%C6%E2%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8%BC%C2%B9%D4


一見それだけの機能ですが、この機能は、
Webブラウザ上で多くの人が開発に関与できるという点で、
『アプリケーションの協調的な促成開発』
 "Collaborative RAD" ができる可能性を
示唆していると考えています。

---
稼動中のシステムの拡張・変更もそのシステム上で行う
システムといえば、Squeakもそうですね。
SuperSwikiには上のようなプラグインがあるとすれば、
もっと先進しているのではないか、と思いますが、、、
いかがでしょうか。

よろしければ、教えてください。


--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From umejava ＠ mars.dti.ne.jp  Sat Jul  8 19:12:46 2006
From: umejava ＠ mars.dti.ne.jp (Masashi Umezawa)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3032] Re: Wiki としての  SuperSwiki
In-Reply-To: <20060708073650.6929.qmail@web2915.mail.tnz.yahoo.co.jp>
References: <20060708073650.6929.qmail@web2915.mail.tnz.yahoo.co.jp>
Message-ID: <JL200607081912464.24815375@mars.dti.ne.jp>

こんにちは
梅澤です。


> -----
> Swikiには、プラグインの仕組みは、ありますでしょうか。
> また、それはどのようなものでしょうか。
> -----

Swikiにはいくつかの派生系があってややこしくなっています。

-旧Swiki
 もはや古くほとんど使われません。しかしPluggable Web Serverというものの上で
 動いており、簡易なプラグインの仕組みのようなものはありました。
 
-ComSwiki
 現在もっとも広く使われているSqueakのWikiです。ComancheというWebサーバの上で
 動いています。もともとプラグインの仕組みはありませんでしたが、バージョン1.5
 からプラグインタグをサポートするようになっています。
 
 http://www.smalltalk.jp/pipermail/squeak-ja/2005-December/002773.html
 
正確にSwikiと呼べるのはこれだけです。SuperSwikiと混乱されてしまっている
ようですので、そちらも解説しておきます。

-SuperSwiki
 ComSwikiに、eToysプロジェクトのアップロード/閲覧機能などを付け加えたもの。
 WikiというよりはWikiの上で動いているアプリです。

-SuperSwiki2
 SuperSwikiのクローン実装。プロジェクトのアップロード/閲覧にフォーカスし、
 プロジェクトの自動分類、バックアップ、複数サイトのマージ、RSS配信など
 便利な機能を追加したもの。SuperSwikiにおいてWikiを使う人はあまりいなかった
 ので、代わりに掲示板システムを搭載しています。

ご質問の意図は、Squeak上のWikiで、プラグインの仕組みをサポートしたものがあるか
ととらえて良いかと思いますが、そうすると正直Swikiシリーズは時代遅れです。

いまはPierという全く新しいWikiがSqueakで作られつつあります。そちらが
おそらくイメージされているものにもっとも近いでしょう。

ここの動画を見ると、どんなものか、概要がつかめると思います。
http://www.lukas-renggli.ch/smalltalk/pier

横川さんの解説も参考になるかと思います。
http://yengawa.homedns.org:8888/YengawaWiki/30

Pierの欠点としては、「いまだalphaで動作が安定しない」「野望が高すぎて
ライブラリが巨大」というのがあります。

私は個人的にはもっと軽量で、かつプラグインもサポートしたWikiを作りたく
思っています。それはScallionと呼ばれる予定です。

では。

 
> Wikiクローンの一つであるWifkyにはWifkyページとして
> 書かれたスクリプト(Perlですが)を、実行できるプラグイン
> があります。
> 
> ((perl ページ名 引数1 引数2 …))
> 
> WikiはWebブラウザ上でページを編集・作成できるツールです
> ので、
> 上のプラグインを使えば、プラグインの開発・編集も
> Webブラウザ上でできるという、優れものです。
> 
> http://wifky.sourceforge.jp/cgi-bin/index.cgi?p=(2006.06.17)+%A5%DA%A1%BC%A5%B8%C6%E2%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8%BC%C2%B9%D4%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3%A4%F2%B8%F8%B3%AB%A4%B7%A4%DE%A4%B7%A4%BF%A1%A3
> http://wifky.sourceforge.jp/cgi-bin/index.cgi?p=%5Bplugin%5D+%A5%DA%A1%BC%A5%B8%C6%E2%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8%BC%C2%B9%D4
> 
> 
> 一見それだけの機能ですが、この機能は、
> Webブラウザ上で多くの人が開発に関与できるという点で、
> 『アプリケーションの協調的な促成開発』
>  "Collaborative RAD" ができる可能性を
> 示唆していると考えています。
> 
> ---
> 稼動中のシステムの拡張・変更もそのシステム上で行う
> システムといえば、Squeakもそうですね。
> SuperSwikiには上のようなプラグインがあるとすれば、
> もっと先進しているのではないか、と思いますが、、、
> いかがでしょうか。
> 
> よろしければ、教えてください。
> 
> 
> --------------------------------------
> Let's start Yahoo! Auction  -  Free Campaign Now!
> http://pr.mail.yahoo.co.jp/auction/

---
[:masashi | ^umezawa]

From scriptonwikipage ＠ yahoo.co.jp  Sat Jul  8 19:29:32 2006
From: scriptonwikipage ＠ yahoo.co.jp (NAKATA, Shunsuke)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3033]  Re: Wiki としての  SuperSwiki
In-Reply-To: <JL200607081912464.24815375@mars.dti.ne.jp>
References: <20060708073650.6929.qmail@web2915.mail.tnz.yahoo.co.jp>
	<JL200607081912464.24815375@mars.dti.ne.jp>
Message-ID: <44AF890C.5050707@yahoo.co.jp>

梅澤さま、ありがとうございます。

Pier、ビデオと横川さんの解説をみました。

すごいなと思いましたが、いまひとつ、よくわからなかった
のが、Sushi Bar のビデオでは、何をしているのでしょうか。

他の人が寿司を発注できるコーナーを、自分のページ内に設置したのか、
あるいは、単にあの時、寿司を注文しただけなのか、、、、

それから、Pierでは、画像やゲームなどの、
（既存の）オブジェクトを貼り付けられるようですが、
存在しないオブジェクトをユーザーがPier上で作成（開発）
できるのでしょうか。


Wifkyの((perl))プラグインでは、ユーザーはWifkyのページとして
プラグインを作成出来ます。


例えば、Wifkyのページ「挨拶」の内容が、

	print ('<P>' . &enc ("こんにちは、$_[1]さん。") . '</P>') ;

だとします。これを、普通のWifkyページの中で、

	((perl 挨拶 山田))

という形で、呼び出して使うことができます。
もちろん、「((perl 挨拶 山田))」のところには、
「<P>こんにちは、山田さん。</P>」がはいります。


「挨拶」のページもWifkyページのひとつに過ぎませんので、
たとえば、誰か他の人が「挨拶」のページの
バグ取りすることも可能です。


つまり、WikipPediaでは、事典の作成を複数の人でコラボラティブ
（協調して）やっていますが、それと同じようなことを
プログラミングで実践できるわけです。

上の例では価値が分かりませんが、もっと大規模な
フレームワーク構築など、に活用できるのではないか
と、考えています。

Wikiの持ってるバージョン管理の機能が、
これにも使えることになりますし、、、、、



Pierには、この様な機能は、ありますか。。。。
--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From umejava ＠ mars.dti.ne.jp  Sat Jul  8 22:37:34 2006
From: umejava ＠ mars.dti.ne.jp (Masashi Umezawa)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3034] Re: Wiki としての SuperSwiki
In-Reply-To: <44AF890C.5050707@yahoo.co.jp>
References: <20060708073650.6929.qmail@web2915.mail.tnz.yahoo.co.jp>
	<JL200607081912464.24815375@mars.dti.ne.jp>
	<44AF890C.5050707@yahoo.co.jp>
Message-ID: <JT200607082237346.2718343@mars.dti.ne.jp>

こんにちは
梅澤です。

> すごいなと思いましたが、いまひとつ、よくわからなかった
> のが、Sushi Bar のビデオでは、何をしているのでしょうか。
> 
> 他の人が寿司を発注できるコーナーを、自分のページ内に設置したのか、
> あるいは、単にあの時、寿司を注文しただけなのか、、、、

あれは、寿司を発注できるコンポーネントをWikiの中にはめこんだのです。
コンポーネントはSeasideというWebアプリケーションフレームワーク上で作られて
います。(PierそのものもSeaside上に作られたコンポーネントです)

つまりSeaside上につくったコンポーネントであれば、自由にWikiの中に貼り付けて
いくことができます。

Seasideはそれ自体が非常に強力なフレームワークです。

例えば以下のチュートリアルがわかりやすいでしょう。
http://www-128.ibm.com/developerworks/opensource/library/os-lightweight8/

Seaside上に作られたアプリとしては以下のようなものがあります。

DabbleDB
http://www.dabbledb.com/

HandsOn
http://blogs.inextenso.com/seaside/blog/learning/051da810-efb6-11da-a8c7-000d935fad1c

これらもデモを見るとわかりますが、何というか、驚愕すべきものです。

> それから、Pierでは、画像やゲームなどの、
> （既存の）オブジェクトを貼り付けられるようですが、
> 存在しないオブジェクトをユーザーがPier上で作成（開発）
> できるのでしょうか。
> 

これについては、Seaside自体に、Webブラウザ上からSeasideのコンポーネントを
開発できる機能が備わっています。(上記のチュートリアルではWebブラウザ上で
Seasideアプリを書き換えています)。ただし、本当に何でもできて、あまりに危険でも
あるので、通常はデプロイ時にoffにしてしまいます。

> Wifkyの((perl))プラグインでは、ユーザーはWifkyのページとして
> プラグインを作成出来ます。
> 
> 
> 例えば、Wifkyのページ「挨拶」の内容が、
> 
>   print ('<P>' . &enc ("こんにちは、$_[1]さん。") . '</P>') ;
> 
> だとします。これを、普通のWifkyページの中で、
> 
>   ((perl 挨拶 山田))
> 
> という形で、呼び出して使うことができます。
> もちろん、「((perl 挨拶 山田))」のところには、
> 「<P>こんにちは、山田さん。</P>」がはいります。
> 
> 
> 「挨拶」のページもWifkyページのひとつに過ぎませんので、
> たとえば、誰か他の人が「挨拶」のページの
> バグ取りすることも可能です。
> 
> 
> つまり、WikipPediaでは、事典の作成を複数の人でコラボラティブ
> （協調して）やっていますが、それと同じようなことを
> プログラミングで実践できるわけです。
> 
> 上の例では価値が分かりませんが、もっと大規模な
> フレームワーク構築など、に活用できるのではないか
> と、考えています。
> 
> Wikiの持ってるバージョン管理の機能が、
> これにも使えることになりますし、、、、、

非常に面白いアイデアですね。現状のSeasideやPierでは、こうしたことを安全
に行わせる仕組みはまだありません。あくまで開発時のみをターゲットにした
機能になっています。

では。
---
[:masashi | ^umezawa]

From koubo2006 ＠ yengawa.jpn.org  Sun Jul  9 13:33:25 2006
From: koubo2006 ＠ yengawa.jpn.org (Koji Yokokawa)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3035] Re: Wiki としての SuperSwiki
In-Reply-To: <44AF890C.5050707@yahoo.co.jp>
References: <JL200607081912464.24815375@mars.dti.ne.jp>
	<44AF890C.5050707@yahoo.co.jp>
Message-ID: <20060709101803.EE89.KOUBO2006@yengawa.jpn.org>

横川です。

On Sat, 08 Jul 2006 19:29:32 +0900
"NAKATA, Shunsuke" <scriptonwikipage@yahoo.co.jp> wrote:

...
> それから、Pierでは、画像やゲームなどの、
> （既存の）オブジェクトを貼り付けられるようですが、
> 存在しないオブジェクトをユーザーがPier上で作成（開発）
> できるのでしょうか。
> 
> 
> Wifkyの((perl))プラグインでは、ユーザーはWifkyのページとして
> プラグインを作成出来ます。
> 
> 
> 例えば、Wifkyのページ「挨拶」の内容が、
> 
> 	print ('<P>' . &enc ("こんにちは、$_[1]さん。") . '</P>') ;
> 
> だとします。これを、普通のWifkyページの中で、
> 
> 	((perl 挨拶 山田))
> 
> という形で、呼び出して使うことができます。
> もちろん、「((perl 挨拶 山田))」のところには、
> 「<P>こんにちは、山田さん。</P>」がはいります。
> 
> 
> 「挨拶」のページもWifkyページのひとつに過ぎませんので、
> たとえば、誰か他の人が「挨拶」のページの
> バグ取りすることも可能です。
> 
> 
> つまり、WikipPediaでは、事典の作成を複数の人でコラボラティブ
> （協調して）やっていますが、それと同じようなことを
> プログラミングで実践できるわけです。
> 
> 上の例では価値が分かりませんが、もっと大規模な
> フレームワーク構築など、に活用できるのではないか
> と、考えています。
> 
> Wikiの持ってるバージョン管理の機能が、
> これにも使えることになりますし、、、、、
> 
> 
> 
> Pierには、この様な機能は、ありますか。。。。
...

今はありませんが、Pierでも昔のバージョン(SmallWiki2という名前で開発され
ていた時期)でWikiページに文章と一緒にSmalltalk式を書いてページを開いたと
きに実行させるという仕組みが入っていました。

なので、PierのWiki文法を変更してSmalltalk式を評価させるのは簡単だと思い
ますし、使い方によっては面白そうです。

難しいのは危険な式の実行を制限することですね。どう制限するかは目的によっ
て変わります。「もっと大規模なフレームワーク構築」というのはたとえばどん
なものなのでしょうか?


-- !
Koji Yokokawa <koubo2006@yengawa.jpn.org>
    http://yengawa.com/
    ^self new!


From scriptonwikipage ＠ yahoo.co.jp  Sun Jul  9 20:23:11 2006
From: scriptonwikipage ＠ yahoo.co.jp (NAKATA, Shunsuke)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3036] Re: Wiki としての SuperSwiki
In-Reply-To: <JT200607082237346.2718343@mars.dti.ne.jp>
References: <20060708073650.6929.qmail@web2915.mail.tnz.yahoo.co.jp>	<JL200607081912464.24815375@mars.dti.ne.jp>	<44AF890C.5050707@yahoo.co.jp>
	<JT200607082237346.2718343@mars.dti.ne.jp>
Message-ID: <44B0E71F.6090900@yahoo.co.jp>

中田です。

梅澤さん、返信ありがとうございます。

チュートリアルやデモを拝見しました。
おっしゃるとおり、驚愕すべきものですね。
さすが、Smalltalk 文化は時代の先を行っていると思いました。



>>>> ただし、本当に何でもできて、あまりに危険でも
>>>> あるので、通常はデプロイ時にoffにしてしまいます。

そうですね。((perl))プラグインも同様の問題を抱えており、
Wifkyの開発者も、使用はイントラネットなど閉じた環境内
に制限すべきであり、インターネットなど不特定の人が
アクセスする環境での使用は避けるように警告しています。

現状の((perl))プラグインは、単に指定されたページの内容を
読み込んで評価する(eval)しているだけなので、ファイル削除や
システムアクセスなどPerlのできることはすべてできる状態です。

ですが、この点に関しては、Java Applet が用いている手法の
「サンドボックスモデル」によって回避できる問題だと考えています。
この場合だと、それをサーバサイドで行うというものです。

残念ながら現在のPerlにはそのような機能を実現する方法がないので、
今とのころ((perl))プラグインではこの方法を回避できません。
Smalltalk/Squeakにサンドボックスの仕組みを実現する方法があれば、
Webブラウザー上でのプラグイン(アプリケーション)開発もできますね。



現在のSeasideやPierは非常に強力ですが、残念ながら、
ホームページビルダーとしての用法に留まっています。
ビルダーの機能はそれはそれで非常に重要なものですが、
サイト管理者が作成するページをクライアントが閲覧する、
サービスや情報の流れが一方通行になってしまいがちです。

Wikipediaの成功が示しているのは、情報提供者と情報利用者の
区別のないサイトのあり方の優位性だと思っています。

そういう意味で、SeadieやPierの今後の展開が楽しみですね。。。。

--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From scriptonwikipage ＠ yahoo.co.jp  Sun Jul  9 21:03:23 2006
From: scriptonwikipage ＠ yahoo.co.jp (NAKATA, Shunsuke)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3037] Re: Wiki としての SuperSwiki
In-Reply-To: <20060709101803.EE89.KOUBO2006@yengawa.jpn.org>
References: <JL200607081912464.24815375@mars.dti.ne.jp>	<44AF890C.5050707@yahoo.co.jp>
	<20060709101803.EE89.KOUBO2006@yengawa.jpn.org>
Message-ID: <44B0F08B.3090807@yahoo.co.jp>

中田です。

横川さん、返信ありがとうございます。

>>>> 「もっと大規模なフレームワーク構築」というのは
>>>> たとえばどんなものなのでしょうか?

すみません、私も具体的にこんな応用例がある、、、というのを
示せればよかったのですが、、、私自身も((perl))プラグインの
"可能性"に技術的な好奇心を抱いただけの状態で、
「恐らく Smalltalkコミュニティではもっと先進しているだろう」
との期待からこちを訪問した次第です。

前述しませんでしたので、補足しますと、
Perlでは他のライブラリーを動的に読み込む仕組み "require"
がありますが、((perl))プラグインの中でもそれを利用できます。

例えば、(SmalltalkコミュニティーでPerlの実例で申し訳ございませんが)
Wifkyページ「税金関数」の中に、関数 tax の定義があるとします。

	sub tax
	  {return $_[0] * 0.05 ;}

これを、別のページ「総額表示」から呼び出して使うことができます。

	require &title2fname (&denc ('税金関数')) ;

	print ('<P>Bill: ' . ($buy + &tax ($buy)) . '</P>') ;


こんな風に、こんな風にWifkyページとして蓄積された関数を
呼び出して使うことができるのです。



Wifkyの場合、Wifkyないの他のページをテキストファイルとして
開くことができるのですが、それを利用すれば、例えば、
WifkyないにCSV形式でデータを保存しておいて、それを、
やはりWifky内ページのスクリプトで処理して、表示する
ということも可能です。

私は職場でWifkyを使っており、職場内の連絡事項・会議案内など
を掲載しています。そういうページでは、
	本件の問合せ先:
		山田 太郎 氏
		内線 1979
		メール: Taou.Yamada@jp.somewhre.com
などを含めていますが、
これをその都度、内線番号を調べるのではなく、
連絡先についてのデータを「連絡先」などのページで
一括管理しておいて、参照したいところでは、
((perl 連絡先 山田太郎)) などと書ければ、
内線番号が変更になった場合などを考えると、
サイトないのページ管理が非常に楽なわけです。。。


CSVデータに限らずとも、もっと面白い応用があるのではないか、、、、
と考えたわけでした。。。。


また、Wikiには、コンテンツ管理システムとしての側面がありますが、
ページ内スクリプトを使えれば、
複数の人がかかわる場合でも一貫性をもって、
もっと効果的に行えるのではないか、
とも思います。

いかがでしょうか。。。。


技術的にはそれほど難易度の高いものではありませんので、
技術的好奇心はさておいて、商用サイト・職場内などで実際の有用性が
みいだせるなら、この方面は発展の余地があると思っています。

そういう意味では、応用例が重要ですね。。。。
--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From umejava ＠ mars.dti.ne.jp  Sun Jul  9 21:27:36 2006
From: umejava ＠ mars.dti.ne.jp (Masashi Umezawa)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3038] Re: Wiki としての  SuperSwiki
In-Reply-To: <44B0E71F.6090900@yahoo.co.jp>
References: <20060708073650.6929.qmail@web2915.mail.tnz.yahoo.co.jp>
	<JL200607081912464.24815375@mars.dti.ne.jp>
	<44AF890C.5050707@yahoo.co.jp>
	<JT200607082237346.2718343@mars.dti.ne.jp>
	<44B0E71F.6090900@yahoo.co.jp>
Message-ID: <JJ200607092127368.2118859@mars.dti.ne.jp>

こんにちは
梅澤です。

> ですが、この点に関しては、Java Applet が用いている手法の
> 「サンドボックスモデル」によって回避できる問題だと考えています。
> この場合だと、それをサーバサイドで行うというものです。
> 
> 残念ながら現在のPerlにはそのような機能を実現する方法がないので、
> 今とのころ((perl))プラグインではこの方法を回避できません。
> Smalltalk/Squeakにサンドボックスの仕組みを実現する方法があれば、
> Webブラウザー上でのプラグイン(アプリケーション)開発もできますね。
> 

そうですね。SqueakのeToysプラグイン(スクイークプラグインと呼ばれているもの)
には、サンドボックスが実装されていますので、技術的には可能であると思います。
そう考えると後は単に手間の問題で、もうひと押しなのですけれどもね。

> 現在のSeasideやPierは非常に強力ですが、残念ながら、
> ホームページビルダーとしての用法に留まっています。
> ビルダーの機能はそれはそれで非常に重要なものですが、
> サイト管理者が作成するページをクライアントが閲覧する、
> サービスや情報の流れが一方通行になってしまいがちです。
> 
> Wikipediaの成功が示しているのは、情報提供者と情報利用者の
> 区別のないサイトのあり方の優位性だと思っています。
> 
> そういう意味で、SeadieやPierの今後の展開が楽しみですね。。。。

ユーザ=プログラマというのは、かのAlan Kayさんもずっと唱えていること
ですからね。これを実現しないとSqueakとしての面目が立ちません。

私も微力ながらそういう方向のWebを指向していきたいと思っています。

---
[:masashi | ^umezawa]

From scriptonwikipage ＠ yahoo.co.jp  Mon Jul 10 23:16:34 2006
From: scriptonwikipage ＠ yahoo.co.jp (NAKATA, Shunsuke)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3039] Re: Wiki としての  SuperSwiki
In-Reply-To: <JJ200607092127368.2118859@mars.dti.ne.jp>
References: <20060708073650.6929.qmail@web2915.mail.tnz.yahoo.co.jp>	<JL200607081912464.24815375@mars.dti.ne.jp>	<44AF890C.5050707@yahoo.co.jp>	<JT200607082237346.2718343@mars.dti.ne.jp>	<44B0E71F.6090900@yahoo.co.jp>
	<JJ200607092127368.2118859@mars.dti.ne.jp>
Message-ID: <44B26142.3080605@yahoo.co.jp>

梅澤さま

中田です。返信ありがとうございます。

>>>> ユーザ=プログラマというのは、かのAlan Kayさんもずっと唱えていること
>>>> ですからね。これを実現しないとSqueakとしての面目が立ちません。
>>>> 
>>>> 私も微力ながらそういう方向のWebを指向していきたいと思っています。


Wikiの話題からはそれてしまいますが、、、、

アラン・ケイ氏の思想についての話がでましたので、
私も考えているところを、、、、、、


ビジネスシーンなど「アプリケーション」という
形態が最も適している場合もありますので、「利用者＝作成者」
という図式がすべての場合に適しているとは思いませんが、、、、
私も同氏の思想には一理あると思っています。

現状では「利用者＝作成者」という形態のソフトウェア
(あるいは「環境」)はまだまだ発展途上にあると感じています。
この様な環境があれば、ソフトウェアの世界はずっと多様になる
はずです。

残念ながら、現在のソフトウェア環境は料理や日曜大工のように
だれでも直感的にできるほど簡単なものではありません。
「利用者＝作成者」を実現するには、ソフトウェア作成の過程から
難しい記号列(プログラムコード)を書く作業を排除すべとだと思います。
(原理的にできるのかどうかはわかりませんが、、、)
そのような意味では、SqueakのeToys、LEGO社のMindStorm、
MATLABのSimulinkのように「機能の塊を視覚的につなげる」作業で
"プログラム" できる必要があるかと思います。。。

Simulinkのようにもともとブロック図で描けるようなシステムや
CADやHP作成など、もともと視覚性のあるものを作るシステムでなければ、
プログラミング作業を視覚的にできないようですが、、、
ロジックの記述も視覚化できればうれしいですね。

CADといえば、建築構造物の図面もCADで作成しますが、
数年前に話題になった「デザインパターン」(GoF)も
建築物のデザインパターンを意識して議論されてきた経緯があるようです。

パターンを取り扱うものとして、
AdaやC++などにはテンプレートの仕組みがあります、
また、Haskelなどの関数型言語には高階関数という考え方があります。
いずれも、その有用性が広く認められているところです。
いずれも「アルゴリズムの抽象化」を実践しているものです。
私が思うところですが、、、
ロジックの視覚化にはテンプレート・高階関数がひとつの鍵かも知れません。


実装の方法はともあれ、「利用者＝作成者」という環境、
とりわけ多人数でのコラボレーション可能な場合ついては、
Wikipedia がその有用性・可能性を実証していると思っています。

Seasideのようなものが今後新しい展開をしていくことを期待しています。


(Seasideについては、今後もっと勉強していくつもりです。)
--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From koubo2006 ＠ yengawa.jpn.org  Tue Jul 11 22:20:32 2006
From: koubo2006 ＠ yengawa.jpn.org (Koji Yokokawa)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3040] Re: Wiki としての SuperSwiki
In-Reply-To: <44B26142.3080605@yahoo.co.jp>
References: <JJ200607092127368.2118859@mars.dti.ne.jp>
	<44B26142.3080605@yahoo.co.jp>
Message-ID: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>

横川です。

On Mon, 10 Jul 2006 23:16:34 +0900
"NAKATA, Shunsuke" <scriptonwikipage@yahoo.co.jp> wrote:

> 梅澤さま
> 
> 中田です。返信ありがとうございます。
> 
> >>>> ユーザ=プログラマというのは、かのAlan Kayさんもずっと唱えていること
> >>>> ですからね。これを実現しないとSqueakとしての面目が立ちません。
> >>>> 
> >>>> 私も微力ながらそういう方向のWebを指向していきたいと思っています。
> 
> 
> Wikiの話題からはそれてしまいますが、、、、
> 
> アラン・ケイ氏の思想についての話がでましたので、
> 私も考えているところを、、、、、、
> 
> 
> ビジネスシーンなど「アプリケーション」という
> 形態が最も適している場合もありますので、「利用者＝作成者」
> という図式がすべての場合に適しているとは思いませんが、、、、
> 私も同氏の思想には一理あると思っています。
> 
> 現状では「利用者＝作成者」という形態のソフトウェア
> (あるいは「環境」)はまだまだ発展途上にあると感じています。
> この様な環境があれば、ソフトウェアの世界はずっと多様になる
> はずです。
> 
> 残念ながら、現在のソフトウェア環境は料理や日曜大工のように
> だれでも直感的にできるほど簡単なものではありません。
> 「利用者＝作成者」を実現するには、ソフトウェア作成の過程から
> 難しい記号列(プログラムコード)を書く作業を排除すべとだと思います。
> (原理的にできるのかどうかはわかりませんが、、、)
> そのような意味では、SqueakのeToys、LEGO社のMindStorm、
> MATLABのSimulinkのように「機能の塊を視覚的につなげる」作業で
> "プログラム" できる必要があるかと思います。。。
> 
> Simulinkのようにもともとブロック図で描けるようなシステムや
> CADやHP作成など、もともと視覚性のあるものを作るシステムでなければ、
> プログラミング作業を視覚的にできないようですが、、、
> ロジックの記述も視覚化できればうれしいですね。
> 
> CADといえば、建築構造物の図面もCADで作成しますが、
> 数年前に話題になった「デザインパターン」(GoF)も
> 建築物のデザインパターンを意識して議論されてきた経緯があるようです。
> 
> パターンを取り扱うものとして、
> AdaやC++などにはテンプレートの仕組みがあります、
> また、Haskelなどの関数型言語には高階関数という考え方があります。
> いずれも、その有用性が広く認められているところです。
> いずれも「アルゴリズムの抽象化」を実践しているものです。
> 私が思うところですが、、、
> ロジックの視覚化にはテンプレート・高階関数がひとつの鍵かも知れません。

高階の抽象化とその視覚化にはぼくも興味があって、IPA未踏プロジェクトの
Swimmyで試みました。
http://yengawa.homedns.org:8888/Swimmy
Etoyですでにプログラムされた複数のオブジェクトをさらに組み合わせて別のプ
ログラムを構成する仕組みで、状態遷移図を視覚化に使いました。
可能性はありそうだけど、どう利用するかが難しくて課題を残してます。


> 実装の方法はともあれ、「利用者＝作成者」という環境、
> とりわけ多人数でのコラボレーション可能な場合ついては、
> Wikipedia がその有用性・可能性を実証していると思っています。
> 
> Seasideのようなものが今後新しい展開をしていくことを期待しています。

Web2.0時代のWikipediaを考えるならば、ある項目を引くと世界中の人々がブロ
グなどの中にばらばらに書いたその項目への記述を集めて表示するようなものに
なるのでは?と夢想してます。
そして、それができるようなハイパー・ブログ・サーバ(?)を作ろうと模索中。
もちろん"Seaside上で"です。

> 
> 
> (Seasideについては、今後もっと勉強していくつもりです。)

ぜひ。


-- !
Koji Yokokawa <koubo2006@yengawa.jpn.org>
    http://yengawa.com/
    ^self new!


From scriptonwikipage ＠ yahoo.co.jp  Wed Jul 12 03:32:33 2006
From: scriptonwikipage ＠ yahoo.co.jp (NAKATA, Shunsuke)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3041] Re: Wiki としての SuperSwiki
In-Reply-To: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>
References: <JJ200607092127368.2118859@mars.dti.ne.jp>	<44B26142.3080605@yahoo.co.jp>
	<20060711220016.F703.KOUBO2006@yengawa.jpn.org>
Message-ID: <44B3EEC1.30908@yahoo.co.jp>

横川さま

中田です。返信ありがとうございます。

>>>> 高階の抽象化とその視覚化にはぼくも興味があって、
>>>> IPA未踏プロジェクトのSwimmyで試みました。
>>>> http://yengawa.homedns.org:8888/Swimmy
>>>> Etoyですでにプログラムされた複数のオブジェクトをさらに組み合わせて
>>>> 別のプログラムを構成する仕組みで、状態遷移図を視覚化に使いました。
>>>> 可能性はありそうだけど、どう利用するかが難しくて課題を残してます。

サイトを拝見し、イメージファイルも開いてみましたが、、、
今ひとつ操作法がよくわかりませんでした。。。。
(Squeakにまだ慣れてないのが大きな理由かも知れませんが)

サイトに書かれていた英文の説明をみましたが、
エージェントシステムとのことですね。

残念ながら、私はエージェントのことは詳しくないのですが、
テンプレートや高階関数が要素同士を強く結合させるものだとしたら、
エージェントは弱く結合するというイメージでよろしいでしょうか。

エージェント技術の用途が見えない、ひとつの理由は、
この技術の特性によるものがあると思います。
コーディング作業が主体をしめる現状のプログラミング環境に
適しているのは、静的な方つまりテンプレートや高階関数です。

そしてもうひとつの理由は、エージェント技術が未成熟である
ことにあるのではないでしょうか。エージェントを動作させる
環境や言語など、基盤となる技術は十分だ思われますが、
実用的なフレームワークは(恐らく)存在しないのではありませんか。

今でこそ当たり前になっているテンプレートの技術も、
「汎用プログラミング」という手法として古くから一部の
計算機科学者には知られていましたし、Ada言語でもgeneric機構
として採用されていました。しかし、それが今のように実用
目的に用いられるまでには、SmalltalkのCollectionを含めて、
ライブラリー・フレームワークの試行錯誤の蓄積があったからです。
C++のテンプレートライブラリーはそれらの経験に基づくものです。

エージェントの場合、ソフトウェア世界をどのようにすれば、
過不足なくモデル化すればいいか、つまり、エージェントの
語彙をどのように設定するか、語彙のフレームワークがまだ
成熟していないのではないでしょうか。

例えば「テレビのリモコン操作」などのようにな余りにも狭い世界で
語彙を決めると、テレビ以外の装置の操作ができないものとなります。
動的な性質をもつエージェントである必要すらなく、普通のオブジェクト
で十分となってしまうわけです。

だからといって、具体的な目標がないままだと先には進めませんので、
手始めには、既存のオブジェクト技術で作られたものをエージェント
でつくり直してみるというのはどうでしょうか。簡単なところでは、
ウィンドウツールキットをエージェントで書いたらどうなるでしょう。
その中で、どのような語彙が共通化できて、どのような語彙は共通化
できないかが見えてくるのではないでしょうか。うまくすれば、
その語彙はトランザクション制御やファイル操作やデータベース処理
にさえ使えるかもしれません。



慣れた行動は別としても、私たちが何かをする時、とりわけ新しい何か
を考えたり・作り出すときには頭の中には「イメージ」があります。
イメージという思考思考過程は、これまでの経験から得たものの流れを、
そのとき考えているものに "当てはめる" 過程が大きいと思います。

難しく言えば、既知の物事との「同型性」(数学用語) を見つけて、
それ関連づいている解法(アルゴリズム)を当てはめるというわけです。
逆に言えば、当てはめることのできる経験、つまり、思考の雛形
がなければ、物事を解決できないといえます。


実用性が確かめられた多くの雛形が出揃った段階で、「利用者＝作成者」
の環境は本当の意味で実現するのではないでしょうか。その時には、
利用者(＝作成者)は既存の雛形をいくつかつなぎ合わせて、自分の目下の
問題を簡単に解決している、という姿を私はイメージしています。
"つなぎ合わせる" 作業を通して、利用者はそれと知らずにプログラミング
行為をしているというわけです。



>>>> Web2.0時代のWikipediaを考えるならば、ある項目を引くと世界中の人々が
>>>> ブログなどの中にばらばらに書いたその項目への記述を集めて表示する
>>>> ようなものになるのでは?と夢想してます。
>>>> そして、それができるようなハイパー・ブログ・サーバ(?)を作ろうと模索中。
>>>> もちろん"Seaside上で"です。

私の場合 Wikipedia のよいところは、協調作業 (コラボレーション) にある
と考えています。さまざまな人が互いの成果を確認し、評価し、その上で、
必要なら修正や追加をする、というプロセスを経て、個々の記事はより完成度の
高いものになり、またWikipedia 全体としては、より広い世界を網羅することに
なっている、それがWikipediaそのものと考えています。

ブログの集約という形になりますと、この協調作業という過程を経ることが
できなため、個々の記事としてもサイト全体としても完成度の低いものになる
のではないかと思います。


いかがでしょうか。

(全体としてずいぶんと長くなってしまいました。。。)
--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From kubo-o ＠ mbox.kyoto-inet.or.jp  Wed Jul 12 11:52:15 2006
From: kubo-o ＠ mbox.kyoto-inet.or.jp (kubo-o)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3042] PluggableTextMorphをつまむ方法
Message-ID: <BIEDLAGDKLHEABOHHEOHMEKDCBAA.kubo-o@mbox.kyoto-inet.or.jp>

以前からPluggableTextMorphの扱い方を
この場で皆さんに教えて頂き、
KJ法みたいなものを実現したいと頑張っている者です。
お陰様でだいぶん理解が進み、
カードを作り、内容を書き込み・書き換え、
それをある場所に格納するところまではきました。
そこで次に、カードをmouseでつまんで移動する仕方が
判らないのです。
つまり、
PluggableTextMorph 
  on: self
  text: #text
  accept: #text:
  readSelection: nil
  menu: nil
は動くのですが、ここに
handlesMouseDown:やmouseDown:を
作用させるにはどうすればよいのでしょうか。
上のon:selfの「selfを自分のクラスのinstanceで
置き換えるのかとも思うのですが、
よく判っていません。
そもそもon:はどういう機能を持つのでしょうか。
どうか宜しくお願い致します。
久保　道



From yoneya ＠ cslab.co.jp  Wed Jul 12 16:25:17 2006
From: yoneya ＠ cslab.co.jp (Masahiro Yoneya)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3043] 子供未来博への出展のお知らせ
Message-ID: <20060712162347.0464.YONEYA@cslab.co.jp>

squeak-ja の皆様

お世話になっております。
株式会社シーズ・ラボの米谷です。

弊社では2002年より毎年、夏休みと冬休みに
「小学生IT教室」を無料で開催しています。
2004年度冬休み、2005年度夏休み・冬休みは
スクイークで簡単なプログラミングを体験してもらっていますが
おかげさまで子供たちには大変好評です。

7月末から札幌商工会議所主催で行われる「子供未来博」にて
スクイークを使った企画を出展いたしますのでお知らせします。

「ゲームクリエイターになろう！ゲーム制作教室」
日時：2006年8月1日(火)
      1部  9:00〜12:30
      2部  14:00〜17:30
場所：札幌（月寒グリーンドーム）

詳細は以下のホームページをご覧下さい。
http://www.sapporo-cci.or.jp/kodomomirai/
子供未来博TOP > 夢・みらい塾 > 夢・応援コース
とたどって、「ゲームクリエイターになろう！ゲーム制作教室」
が弊社の出展です。

1部、2部とも満員になり募集は締め切っております。
子供たちに楽しんでもらえる企画にしたいと思います。

+----------------------------------------+
米谷 正広  yoneya@cslab.co.jp　[C's Lab Co.,Ltd]

From sumi ＠ seagreen.ocn.ne.jp  Wed Jul 12 17:19:42 2006
From: sumi ＠ seagreen.ocn.ne.jp (Masato Sumi)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3044] Re: PluggableTextMorphをつまむ方法
In-Reply-To: <BIEDLAGDKLHEABOHHEOHMEKDCBAA.kubo-o@mbox.kyoto-inet.or.jp>
References: <BIEDLAGDKLHEABOHHEOHMEKDCBAA.kubo-o@mbox.kyoto-inet.or.jp>
Message-ID: <86c0320c0607120119o2cc01bc6vc264e266daa1337c@mail.gmail.com>

久保さん、ごきげんよう。鷲見です。

on: のところに挿入する引数は、このカード（a PluggableTextMorph）に
入力された内容を別のオブジェクト（モデルと呼ぶ）で管理しているときに
それを当てはめます。たとえば、

| model field |
model := ProcessBrowser new.
model openAsMorph.

field := PluggableTextMorph
   on: model
   text: #selectedMethod
   accept: nil
   readSelection: nil
   menu: nil.
field center: Point fromUser.
field openInWorld.

というスクリプトを評価して、クリックして指定した場所に a Pluggable-
TextMorph を設置してから、同時に開くプロセスブラウザの右手のリスト
から適当な項目を選んだときに起こることを観察してみてください。

この仕組みはカードを動かす目的とは直接関係ないので、たとえば、
alt/cmd + ドラッグでの移動を使う…というのではダメでしょうか。

あるいは、カードを a PluggableTextMorph だけではなく、a Rectangle-
Morph のようなクリックしてピックアップできるタイプのモーフのサブ
モーフとして a PlugableTextMorph を組み合わせた、複合モーフのクラスとして
新しく定義する…という方法もあるかもしれません。

06/07/12 に kubo-o<kubo-o@mbox.kyoto-inet.or.jp> さんは書きました:
> handlesMouseDown:やmouseDown:を
> 作用させるにはどうすればよいのでしょうか。
> 上のon:selfの「selfを自分のクラスのinstanceで
> 置き換えるのかとも思うのですが、
> よく判っていません。
> そもそもon:はどういう機能を持つのでしょうか。
> どうか宜しくお願い致します。
> 久保　道

-- 
Masato Sumi

From koubo2006 ＠ yengawa.jpn.org  Wed Jul 12 17:31:10 2006
From: koubo2006 ＠ yengawa.jpn.org (Koji Yokokawa)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3045] Re: Wiki としての SuperSwiki
In-Reply-To: <44B3EEC1.30908@yahoo.co.jp>
References: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>
	<44B3EEC1.30908@yahoo.co.jp>
Message-ID: <20060712171106.F710.KOUBO2006@yengawa.jpn.org>

横川です。
お付き合いありがとうございます。

On Wed, 12 Jul 2006 03:32:33 +0900
"NAKATA, Shunsuke" <scriptonwikipage@yahoo.co.jp> wrote:

> 横川さま
> 
> 中田です。返信ありがとうございます。
> 
> >>>> 高階の抽象化とその視覚化にはぼくも興味があって、
> >>>> IPA未踏プロジェクトのSwimmyで試みました。
> >>>> http://yengawa.homedns.org:8888/Swimmy
> >>>> Etoyですでにプログラムされた複数のオブジェクトをさらに組み合わせて
> >>>> 別のプログラムを構成する仕組みで、状態遷移図を視覚化に使いました。
> >>>> 可能性はありそうだけど、どう利用するかが難しくて課題を残してます。
> 
> サイトを拝見し、イメージファイルも開いてみましたが、、、
> 今ひとつ操作法がよくわかりませんでした。。。。
> (Squeakにまだ慣れてないのが大きな理由かも知れませんが)
> 
> サイトに書かれていた英文の説明をみましたが、
> エージェントシステムとのことですね。

使い方がわかりにくくてすみません。別の事にかまけて整備をほったらかしてま
す。
やっぱり使ってるところのビデオとか欲しいですよね。。。

Swimmyシステム自体はマルチエージェント開発実行環境ですが、その中のエージェ
ントのプログラミングをEtoyでプログラムされたオブジェクトをさらに組み合わ
せるという方法でやっているのでご紹介しました。
厳密に言うと高階とエージェントとは関係ありません。
(宣伝に走って、混乱させてしまったかもしれません。すみません。)

> 
> 残念ながら、私はエージェントのことは詳しくないのですが、
> テンプレートや高階関数が要素同士を強く結合させるものだとしたら、
> エージェントは弱く結合するというイメージでよろしいでしょうか。

その通りです。
結合力と考えると関数とマルチエージェントの間にオブジェクト指向が入ると思
います。(オブジェクト指向とは計算をオブジェクトという単位で区切ってオブ
ジェクト同士のメッセージのやり取りで計算を進める技術です。)
マルチエージェントはメッセージのやり取りをさらに柔軟にしています。

> 
> エージェント技術の用途が見えない、ひとつの理由は、
> この技術の特性によるものがあると思います。
> コーディング作業が主体をしめる現状のプログラミング環境に
> 適しているのは、静的な方つまりテンプレートや高階関数です。
> 
> そしてもうひとつの理由は、エージェント技術が未成熟である
> ことにあるのではないでしょうか。エージェントを動作させる
> 環境や言語など、基盤となる技術は十分だ思われますが、
> 実用的なフレームワークは(恐らく)存在しないのではありませんか。
> 
> 今でこそ当たり前になっているテンプレートの技術も、
> 「汎用プログラミング」という手法として古くから一部の
> 計算機科学者には知られていましたし、Ada言語でもgeneric機構
> として採用されていました。しかし、それが今のように実用
> 目的に用いられるまでには、SmalltalkのCollectionを含めて、
> ライブラリー・フレームワークの試行錯誤の蓄積があったからです。
> C++のテンプレートライブラリーはそれらの経験に基づくものです。
> 
> エージェントの場合、ソフトウェア世界をどのようにすれば、
> 過不足なくモデル化すればいいか、つまり、エージェントの
> 語彙をどのように設定するか、語彙のフレームワークがまだ
> 成熟していないのではないでしょうか。
> 
> 例えば「テレビのリモコン操作」などのようにな余りにも狭い世界で
> 語彙を決めると、テレビ以外の装置の操作ができないものとなります。
> 動的な性質をもつエージェントである必要すらなく、普通のオブジェクト
> で十分となってしまうわけです。
> 
> だからといって、具体的な目標がないままだと先には進めませんので、
> 手始めには、既存のオブジェクト技術で作られたものをエージェント
> でつくり直してみるというのはどうでしょうか。簡単なところでは、
> ウィンドウツールキットをエージェントで書いたらどうなるでしょう。
> その中で、どのような語彙が共通化できて、どのような語彙は共通化
> できないかが見えてくるのではないでしょうか。うまくすれば、
> その語彙はトランザクション制御やファイル操作やデータベース処理
> にさえ使えるかもしれません。

マルチエージェントの実用化にはおっしゃるとおりの問題があります。
現在それを解決する方向として具体的に進んでいるものの一つはFIPAというエー
ジェント間コミュニケーションの標準規格化です。

FIPAホームページ
http://www.fipa.org/

FIPAのとても詳しい説明。
日本語!チュートリアルつき!
http://www.mamezou.net/AgentVillage/index.html
(実はこれも宣伝です。注意;-)

個人的感想ですが、オブジェクト指向が出始めの頃「それって関数でできるじゃ
ん」といわれていたようですが、現在のエージェント技術も同じような境遇にあ
るように感じます。

> 
> 
> 
> 慣れた行動は別としても、私たちが何かをする時、とりわけ新しい何か
> を考えたり・作り出すときには頭の中には「イメージ」があります。
> イメージという思考思考過程は、これまでの経験から得たものの流れを、
> そのとき考えているものに "当てはめる" 過程が大きいと思います。
> 
> 難しく言えば、既知の物事との「同型性」(数学用語) を見つけて、
> それ関連づいている解法(アルゴリズム)を当てはめるというわけです。
> 逆に言えば、当てはめることのできる経験、つまり、思考の雛形
> がなければ、物事を解決できないといえます。
> 
> 
> 実用性が確かめられた多くの雛形が出揃った段階で、「利用者＝作成者」
> の環境は本当の意味で実現するのではないでしょうか。その時には、
> 利用者(＝作成者)は既存の雛形をいくつかつなぎ合わせて、自分の目下の
> 問題を簡単に解決している、という姿を私はイメージしています。
> "つなぎ合わせる" 作業を通して、利用者はそれと知らずにプログラミング
> 行為をしているというわけです。

オブジェクト指向技術ではタイプやインターフェイスと呼ばれる仕組みを利用し
て同型性をプログラミングに生かす方法が広く利用されていますね。
マルチエージェント技術ではロール(役割)によって同型性を取り入れています。
ぼくはこれをだんだんと「利用者＝作成者」環境に近づく過程だと感じているの
ですが、これは意見の分かれるところでしょう。


-- !
Koji Yokokawa <koubo2006@yengawa.jpn.org>
    http://yengawa.com/
    ^self new!


From koubo2006 ＠ yengawa.jpn.org  Wed Jul 12 18:05:38 2006
From: koubo2006 ＠ yengawa.jpn.org (Koji Yokokawa)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3046] Re: Wiki としての SuperSwiki
In-Reply-To: <44B3EEC1.30908@yahoo.co.jp>
References: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>
	<44B3EEC1.30908@yahoo.co.jp>
Message-ID: <20060712173443.F713.KOUBO2006@yengawa.jpn.org>

横川です。
ちょっと長かったので、後半(本題?)は別メールにしました。

On Wed, 12 Jul 2006 03:32:33 +0900
"NAKATA, Shunsuke" <scriptonwikipage@yahoo.co.jp> wrote:
...

> >>>> Web2.0時代のWikipediaを考えるならば、ある項目を引くと世界中の人々が
> >>>> ブログなどの中にばらばらに書いたその項目への記述を集めて表示する
> >>>> ようなものになるのでは?と夢想してます。
> >>>> そして、それができるようなハイパー・ブログ・サーバ(?)を作ろうと模索中。
> >>>> もちろん"Seaside上で"です。
> 
> 私の場合 Wikipedia のよいところは、協調作業 (コラボレーション) にある
> と考えています。さまざまな人が互いの成果を確認し、評価し、その上で、
> 必要なら修正や追加をする、というプロセスを経て、個々の記事はより完成度の
> 高いものになり、またWikipedia 全体としては、より広い世界を網羅することに
> なっている、それがWikipediaそのものと考えています。
> 
> ブログの集約という形になりますと、この協調作業という過程を経ることが
> できなため、個々の記事としてもサイト全体としても完成度の低いものになる
> のではないかと思います。


ぼくは信頼や完成度をどう評価するかという評価基準から変えてみようと思って
います。「辞書とはこういうものだ」という今ある常識自体を疑ってみようとい
う考え方です。
ですから、「Wikipedia自体がどうなるか」を言っているのではありません。辞
書のように見えてまったく別の仕組み、もしくはぜんぜん辞書っぽくないけど辞
書の項目を調べるのと同じような効果があるものができないかと考えてます。

たとえば、Web2.0という得体の知れない言葉を調べるとしたら、去年のの解釈と
最近1ヶ月の解釈では違っていたり、経済方面の人とIT方面の人ではまたぜんぜ
ん違っていたりというのは当たり前です。古くて変わらない情報は辞書を調べれ
ばいいけど、新しくて活発に議論されている情報のためのツールはほとんど無い
というのが現状でしょう。

実はここまで書いて、大げさな言い方になってしまって困ってしまいました。
とりあえずぼくがやれるのは単に新しいブログ・サーバを作ってみるだけという
のが現状です。
# こころざしは高く
# 目標は低く


-- !
Koji Yokokawa <koubo2006@yengawa.jpn.org>
    http://yengawa.com/
    ^self new!


From kubo-o ＠ mbox.kyoto-inet.or.jp  Wed Jul 12 22:19:55 2006
From: kubo-o ＠ mbox.kyoto-inet.or.jp (kubo-o)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3047] Re: PluggableTextMorphをつまむ方法
In-Reply-To: <86c0320c0607120119o2cc01bc6vc264e266daa1337c@mail.gmail.com>
Message-ID: <BIEDLAGDKLHEABOHHEOHEEKFCBAA.kubo-o@mbox.kyoto-inet.or.jp>

鷲見さん、早速ありがとうございました。
on:のはたらきについてはよく判りました。
もう一つの方のことですが、a Rectangle-Morph のようなクリックしてピックアップ
できるタイプのモーフでないと、PluggableTextMorphは直接にはmouseでつかめない
のでしょうか。
はじめにworld上でopenInHnadをやるときだけはつかめていますが。
on:などの引数付きのPluggableTextMorphに、なにか他の引数を追加すれば、
eventhandlingが使えるのでしょうか。
久保　道

-----Original Message-----
From: squeak-ja-bounces@smalltalk.jp
[mailto:squeak-ja-bounces@smalltalk.jp]On Behalf Of Masato Sumi
Sent: Wednesday, July 12, 2006 5:20 PM
To: Squeak discussion in Japanese
Subject: [Squeak-ja: 3044] Re: PluggableTextMorphをつまむ方法


久保さん、ごきげんよう。鷲見です。

on: のところに挿入する引数は、このカード（a PluggableTextMorph）に
入力された内容を別のオブジェクト（モデルと呼ぶ）で管理しているときに
それを当てはめます。たとえば、

| model field |
model := ProcessBrowser new.
model openAsMorph.

field := PluggableTextMorph
   on: model
   text: #selectedMethod
   accept: nil
   readSelection: nil
   menu: nil.
field center: Point fromUser.
field openInWorld.

というスクリプトを評価して、クリックして指定した場所に a Pluggable-
TextMorph を設置してから、同時に開くプロセスブラウザの右手のリスト
から適当な項目を選んだときに起こることを観察してみてください。

この仕組みはカードを動かす目的とは直接関係ないので、たとえば、
alt/cmd + ドラッグでの移動を使う…というのではダメでしょうか。

あるいは、カードを a PluggableTextMorph だけではなく、a Rectangle-
Morph のようなクリックしてピックアップできるタイプのモーフのサブ
モーフとして a PlugableTextMorph を組み合わせた、複合モーフのクラスとして
新しく定義する…という方法もあるかもしれません。

06/07/12 に kubo-o<kubo-o@mbox.kyoto-inet.or.jp> さんは書きました:
> handlesMouseDown:やmouseDown:を
> 作用させるにはどうすればよいのでしょうか。
> 上のon:selfの「selfを自分のクラスのinstanceで
> 置き換えるのかとも思うのですが、
> よく判っていません。
> そもそもon:はどういう機能を持つのでしょうか。
> どうか宜しくお願い致します。
> 久保　道

--
Masato Sumi


From koubo2006 ＠ yengawa.jpn.org  Thu Jul 13 22:27:35 2006
From: koubo2006 ＠ yengawa.jpn.org (Koji Yokokawa)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3048] Re: PluggableTextMorphをつまむ方法
In-Reply-To: <BIEDLAGDKLHEABOHHEOHEEKFCBAA.kubo-o@mbox.kyoto-inet.or.jp>
References: <86c0320c0607120119o2cc01bc6vc264e266daa1337c@mail.gmail.com>
	<BIEDLAGDKLHEABOHHEOHEEKFCBAA.kubo-o@mbox.kyoto-inet.or.jp>
Message-ID: <20060713214836.F71E.KOUBO2006@yengawa.jpn.org>

横川です。
ちょこっと補足。

鷲見さんのアイデアの実装例はこんな感じです。
カードの周りに余白を作って、そこをつまめるようにしました。
クラスは新しく定義してませんが、クラスを作ったときもレイアウトの方法は同
じものが使えます。

> あるいは、カードを a PluggableTextMorph だけではなく、a Rectangle-
> Morph のようなクリックしてピックアップできるタイプのモーフのサブ
> モーフとして a PlugableTextMorph を組み合わせた、複合モーフのクラスとして
> 新しく定義する…という方法もあるかもしれません。

----
| model field card |
model := ProcessBrowser new.
model openAsMorph.

field := PluggableTextMorph
   on: model
   text: #selectedMethod
   accept: nil
   readSelection: nil
   menu: nil.
field center: Point fromUser.
card := BorderedMorph new.
card layoutPolicy: ProportionalLayout new.
card addMorph: field 
	fullFrame: (LayoutFrame
		fractions: (0 @ 0 corner: 1.0 @ 1.0)
		offsets: (10 @ 10 corner: -10 @ -10)).
card extent: 100@100.
card color: Color white.
card openInWorld.

----


On Wed, 12 Jul 2006 22:19:55 +0900
"kubo-o" <kubo-o@mbox.kyoto-inet.or.jp> wrote:

> 鷲見さん、早速ありがとうございました。
> on:のはたらきについてはよく判りました。
> もう一つの方のことですが、a Rectangle-Morph のようなクリックしてピックアップ
> できるタイプのモーフでないと、PluggableTextMorphは直接にはmouseでつかめない
> のでしょうか。
> はじめにworld上でopenInHnadをやるときだけはつかめていますが。
> on:などの引数付きのPluggableTextMorphに、なにか他の引数を追加すれば、
> eventhandlingが使えるのでしょうか。
> 久保　道
> 
> -----Original Message-----
> From: squeak-ja-bounces@smalltalk.jp
> [mailto:squeak-ja-bounces@smalltalk.jp]On Behalf Of Masato Sumi
> Sent: Wednesday, July 12, 2006 5:20 PM
> To: Squeak discussion in Japanese
> Subject: [Squeak-ja: 3044] Re: PluggableTextMorphをつまむ方法
> 
> 
> 久保さん、ごきげんよう。鷲見です。
> 
> on: のところに挿入する引数は、このカード（a PluggableTextMorph）に
> 入力された内容を別のオブジェクト（モデルと呼ぶ）で管理しているときに
> それを当てはめます。たとえば、
> 
> | model field |
> model := ProcessBrowser new.
> model openAsMorph.
> 
> field := PluggableTextMorph
>    on: model
>    text: #selectedMethod
>    accept: nil
>    readSelection: nil
>    menu: nil.
> field center: Point fromUser.
> field openInWorld.
> 
> というスクリプトを評価して、クリックして指定した場所に a Pluggable-
> TextMorph を設置してから、同時に開くプロセスブラウザの右手のリスト
> から適当な項目を選んだときに起こることを観察してみてください。
> 
> この仕組みはカードを動かす目的とは直接関係ないので、たとえば、
> alt/cmd + ドラッグでの移動を使う…というのではダメでしょうか。
> 
> あるいは、カードを a PluggableTextMorph だけではなく、a Rectangle-
> Morph のようなクリックしてピックアップできるタイプのモーフのサブ
> モーフとして a PlugableTextMorph を組み合わせた、複合モーフのクラスとして
> 新しく定義する…という方法もあるかもしれません。
> 
> 06/07/12 に kubo-o<kubo-o@mbox.kyoto-inet.or.jp> さんは書きました:
> > handlesMouseDown:やmouseDown:を
> > 作用させるにはどうすればよいのでしょうか。
> > 上のon:selfの「selfを自分のクラスのinstanceで
> > 置き換えるのかとも思うのですが、
> > よく判っていません。
> > そもそもon:はどういう機能を持つのでしょうか。
> > どうか宜しくお願い致します。
> > 久保　道
> 
> --
> Masato Sumi

-- !
Koji Yokokawa <koubo2006@yengawa.jpn.org>
    http://yengawa.com/
    ^self new!


From scriptonwikipage ＠ yahoo.co.jp  Thu Jul 13 23:11:57 2006
From: scriptonwikipage ＠ yahoo.co.jp (NAKATA, Shunsuke)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3049] Re: Wiki としての SuperSwiki
In-Reply-To: <20060712171106.F710.KOUBO2006@yengawa.jpn.org>
References: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>	<44B3EEC1.30908@yahoo.co.jp>
	<20060712171106.F710.KOUBO2006@yengawa.jpn.org>
Message-ID: <44B654AD.6070609@yahoo.co.jp>

横川さん

こちらこそ、お付き合いありがどうございます。

サイト拝見しました。(というかこれまでも見たことがあります)

役割で分担するエージェントと、
機能で分担するオブジェクトとでは、
決定的に違うのは何でしょうか。
--
能動性/受動性 という点では、スレッドで動作する
java.lang.Runnable なオブジェクトは、
エージェントということになりますよね。

10年以上前ですが、所 真理雄 氏 が研究目的で、
Smalltalk-80 を並列化して、Concurrent Smalltalk
というものをつくってましたが、
それに近いものなのでしょうかね。
(ご存知ありませんよね)
--
インターフェースの汎用性が決定的な違いなのでしょうか。
LISPのevalはS式という汎用データ形式を受け付ける
天蓋孤独なエージェントなのでしょうか。
--
あるいは、「S式を受け付け、能動的かつ協調的に機能する
複数のオブジェクトの集まり」というというところなのでしょうか。

おおよそのところ、蟻の家族とか免疫細胞群
(T細胞,B細胞,マクロファージ,...)という
イメージだとは思いますが、
--
だとしたら、エージェント技術は、やはり、
一人の人(またはひとつの団体)が最初から役割を
はっきりと決めた、役割分担のできた能動体の集団
という形で実装されるのだろうと思いました。

だれが自分の家族の一員か、フェロモン・触覚、あるいは、
レセプターで確認しあって作業するというものになりますね。

家族がばらばらになると機能できない、、、

モバイルエージェントとなると、誰かが号令をかけて、
一族が一斉に移動することになるんでしょうね。


なんか、すごいですね。エージェントって。

"Star Trek" にでてくる、Borg とか ナノプローブ みたいな
ものを作ろうとしているようにも思えてきました。怖い感じも
しますね。特に軍事目的で国家規模で開発すれば、今のコンピュー
ターウィルスなんて赤子に思える技術なのでしょうね。

------
話は戻りますが、((perl))プラグインやSeasideのことを
いろいろ議論してきましたが、すごいサイトがオープンしましたね。

YouOS
	http://www.youos.com/

ここでは、JavaScriptでクライアントアプリをWeb上で開発できるようです。
もっとも、協調作業なのかどうかはわかりませんが、
デフォルトChat機能が搭載されていることを考えると、
協調作業も技術的にはまったく問題ないみたいです。

世の中の進み方、早いですね。




━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
> Swimmyシステム自体はマルチエージェント開発実行環境ですが、その中のエージェ
> ントのプログラミングをEtoyでプログラムされたオブジェクトをさらに組み合わ
> せるという方法でやっているのでご紹介しました。
> 厳密に言うと高階とエージェントとは関係ありません。
> (宣伝に走って、混乱させてしまったかもしれません。すみません。)
> 
> 結合力と考えると関数とマルチエージェントの間にオブジェクト指向が入ると思
> います。(オブジェクト指向とは計算をオブジェクトという単位で区切ってオブ
> ジェクト同士のメッセージのやり取りで計算を進める技術です。)
> マルチエージェントはメッセージのやり取りをさらに柔軟にしています。
> 
> マルチエージェントの実用化にはおっしゃるとおりの問題があります。
> 現在それを解決する方向として具体的に進んでいるものの一つはFIPAというエー
> ジェント間コミュニケーションの標準規格化です。
> 
> FIPAホームページ
> http://www.fipa.org/
> 
> FIPAのとても詳しい説明。
> 日本語!チュートリアルつき!
> http://www.mamezou.net/AgentVillage/index.html
> (実はこれも宣伝です。注意;-)
> 
> 個人的感想ですが、オブジェクト指向が出始めの頃「それって関数でできるじゃ
> ん」といわれていたようですが、現在のエージェント技術も同じような境遇にあ
> るように感じます。
> 
> オブジェクト指向技術ではタイプやインターフェイスと呼ばれる仕組みを利用し
> て同型性をプログラミングに生かす方法が広く利用されていますね。
> マルチエージェント技術ではロール(役割)によって同型性を取り入れています。
> ぼくはこれをだんだんと「利用者＝作成者」環境に近づく過程だと感じているの
> ですが、これは意見の分かれるところでしょう。

--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From scriptonwikipage ＠ yahoo.co.jp  Fri Jul 14 08:28:20 2006
From: scriptonwikipage ＠ yahoo.co.jp (NAKATA, Shunsuke)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3050] m
In-Reply-To: <20060712173443.F713.KOUBO2006@yengawa.jpn.org>
References: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>	<44B3EEC1.30908@yahoo.co.jp>
	<20060712173443.F713.KOUBO2006@yengawa.jpn.org>
Message-ID: <44B6D714.8090201@yahoo.co.jp>

横川さん

中田です。


私は職場でWiki(Wifky)で業務用のサイトを運営していて感じるのは、
「便利」というのは究極的にはその人それぞれで違うということてです。

私の職場はほとんどは技術者なのですが、中には技術補助の業務の方や、
庶務(人事関連などを扱えう業務)やシステム管理の担当者など、業務内容が
明らかに異なる人がいます。圧倒的多数の閲覧者であろう技術者のみに
焦点をあててサイトを構築すると、技術者には便利なサイトになるでしょうが、
その他の業務の方には不便になってしまいます。

こういう問題を解決するには、ポートレットというところに行き着きますよね。
サイトのトップページを利用者一人一人が自分の必要に合わせて変えてゆく。
私の知る限り既存のポータルサーバーというのは、ポートレットはそのサーバー
の中だけで閉じてるものです。

例えば人によっては他部署の運営するポートレットを自分のページに
貼り付けたいと思う人もいますが、それはポートレットに共通の規格が
ないためにそれは適わない。(そのページごと内部フレームIFRAMEとして
取込んで表示してしまうポートレットを自部署が使うポータルにあれば
それに近しいことはできる形になりますが、)

世の中のポートレットに統一した規格があれば、あちこちのサイトの
ポートレットを取込んで、自分にとって本当に使いやすいページにできますね。

横川さんがおっしゃるWeb2.0時代の情報サイトというのは、
そういうものなのでしょうか。

実はこういう考え方はポータルサイトという概念が生まれるよりもずっと
前に存在していました。時代に理解されずに開発が終了してしまいましたが、
10年以上前に Apple Computer が OpenDoc (あるいは Copland) という分散
オブジェクトのシステムに着手したことがありましたよね。

このときはまだ XML といった業界標準の汎用の構造的データ記述形式が
存在しなかったので、Java Applet のクラスファイル (あるいは 実行可能
JARファイル) に近いものを部品として想定していたはずです。

Apple Computer が OpenDoc の開発を断念していなければ、
インターネットの世界はもっともっと違っていたでしょうね。
現在ではそれを JavaScript と XML (JAXP) で実現する流れがありますね。
インターネット上のデスクトップ環境 YouOS や Google Spreadsheet など。
そんな今の時代こそ Smalltalk の出番がきたというきもします。

Smalltalk (Squeak) を使ってみて少し気になったのですが、Smalltalk は
イメージファイルという環境で区切られた閉鎖的な環境ではないかと。
Smalltalk の環境がネットワーク上で共有できるなら、それこそ、
OpenDoc は簡単に実現できそうなものですが、今ひとつ残念です。
Smalltalk の部品オブジェクトをネットワーク上でやり取りできれば、
ポートレットなど朝飯前に作れますよね。

もっとも、こういう方面での成長をとげてこなった(だろう,想像で言ってます)
現在の Smalltalk の環境の場合、先に述べたようにセキュリティの面で
問題がありますよね。外部からくるオブジェクトがそのままウィルスにも
なってしまい得る。その意味では、能力の大きいPostScriptに制限をかけて、
PDFが作成されたように、ネットワーク環境向けに、能力に制限をかけられる
環境 (サンドバッグモデル) の開発が望まれるところですね。

Smalltalk がんばれ!


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

> ぼくは信頼や完成度をどう評価するかという評価基準から変えてみようと思って
> います。「辞書とはこういうものだ」という今ある常識自体を疑ってみようとい
> う考え方です。
> ですから、「Wikipedia自体がどうなるか」を言っているのではありません。辞
> 書のように見えてまったく別の仕組み、もしくはぜんぜん辞書っぽくないけど辞
> 書の項目を調べるのと同じような効果があるものができないかと考えてます。
> 
> たとえば、Web2.0という得体の知れない言葉を調べるとしたら、去年のの解釈と
> 最近1ヶ月の解釈では違っていたり、経済方面の人とIT方面の人ではまたぜんぜ
> ん違っていたりというのは当たり前です。古くて変わらない情報は辞書を調べれ
> ばいいけど、新しくて活発に議論されている情報のためのツールはほとんど無い
> というのが現状でしょう。
> 
> 実はここまで書いて、大げさな言い方になってしまって困ってしまいました。
> とりあえずぼくがやれるのは単に新しいブログ・サーバを作ってみるだけという
> のが現状です。
> # こころざしは高く
> # 目標は低く

--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From scriptonwikipage ＠ yahoo.co.jp  Fri Jul 14 08:29:49 2006
From: scriptonwikipage ＠ yahoo.co.jp (NAKATA, Shunsuke)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3051] Re: Wiki としての SuperSwiki
In-Reply-To: <44B6D714.8090201@yahoo.co.jp>
References: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>	<44B3EEC1.30908@yahoo.co.jp>
	<20060712173443.F713.KOUBO2006@yengawa.jpn.org>
	<44B6D714.8090201@yahoo.co.jp>
Message-ID: <44B6D76D.9030207@yahoo.co.jp>

横川さん

中田です。


私は職場でWiki(Wifky)で業務用のサイトを運営していて感じるのは、
「便利」というのは究極的にはその人それぞれで違うということてです。

私の職場はほとんどは技術者なのですが、中には技術補助の業務の方や、
庶務(人事関連などを扱えう業務)やシステム管理の担当者など、業務内容が
明らかに異なる人がいます。圧倒的多数の閲覧者であろう技術者のみに
焦点をあててサイトを構築すると、技術者には便利なサイトになるでしょうが、
その他の業務の方には不便になってしまいます。

こういう問題を解決するには、ポートレットというところに行き着きますよね。
サイトのトップページを利用者一人一人が自分の必要に合わせて変えてゆく。
私の知る限り既存のポータルサーバーというのは、ポートレットはそのサーバー
の中だけで閉じてるものです。

例えば人によっては他部署の運営するポートレットを自分のページに
貼り付けたいと思う人もいますが、それはポートレットに共通の規格が
ないためにそれは適わない。(そのページごと内部フレームIFRAMEとして
取込んで表示してしまうポートレットを自部署が使うポータルにあれば
それに近しいことはできる形になりますが、)

世の中のポートレットに統一した規格があれば、あちこちのサイトの
ポートレットを取込んで、自分にとって本当に使いやすいページにできますね。

横川さんがおっしゃるWeb2.0時代の情報サイトというのは、
そういうものなのでしょうか。

実はこういう考え方はポータルサイトという概念が生まれるよりもずっと
前に存在していました。時代に理解されずに開発が終了してしまいましたが、
10年以上前に Apple Computer が OpenDoc (あるいは Copland) という分散
オブジェクトのシステムに着手したことがありましたよね。

このときはまだ XML といった業界標準の汎用の構造的データ記述形式が
存在しなかったので、Java Applet のクラスファイル (あるいは 実行可能
JARファイル) に近いものを部品として想定していたはずです。

Apple Computer が OpenDoc の開発を断念していなければ、
インターネットの世界はもっともっと違っていたでしょうね。
現在ではそれを JavaScript と XML (JAXP) で実現する流れがありますね。
インターネット上のデスクトップ環境 YouOS や Google Spreadsheet など。
そんな今の時代こそ Smalltalk の出番がきたというきもします。

Smalltalk (Squeak) を使ってみて少し気になったのですが、Smalltalk は
イメージファイルという環境で区切られた閉鎖的な環境ではないかと。
Smalltalk の環境がネットワーク上で共有できるなら、それこそ、
OpenDoc は簡単に実現できそうなものですが、今ひとつ残念です。
Smalltalk の部品オブジェクトをネットワーク上でやり取りできれば、
ポートレットなど朝飯前に作れますよね。

もっとも、こういう方面での成長をとげてこなった(だろう,想像で言ってます)
現在の Smalltalk の環境の場合、先に述べたようにセキュリティの面で
問題がありますよね。外部からくるオブジェクトがそのままウィルスにも
なってしまい得る。その意味では、能力の大きいPostScriptに制限をかけて、
PDFが作成されたように、ネットワーク環境向けに、能力に制限をかけられる
環境 (サンドバッグモデル) の開発が望まれるところですね。

Smalltalk がんばれ!


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

>> ぼくは信頼や完成度をどう評価するかという評価基準から変えてみようと思って
>> います。「辞書とはこういうものだ」という今ある常識自体を疑ってみようとい
>> う考え方です。
>> ですから、「Wikipedia自体がどうなるか」を言っているのではありません。辞
>> 書のように見えてまったく別の仕組み、もしくはぜんぜん辞書っぽくないけど辞
>> 書の項目を調べるのと同じような効果があるものができないかと考えてます。
>>
>> たとえば、Web2.0という得体の知れない言葉を調べるとしたら、去年のの解釈と
>> 最近1ヶ月の解釈では違っていたり、経済方面の人とIT方面の人ではまたぜんぜ
>> ん違っていたりというのは当たり前です。古くて変わらない情報は辞書を調べれ
>> ばいいけど、新しくて活発に議論されている情報のためのツールはほとんど無い
>> というのが現状でしょう。
>>
>> 実はここまで書いて、大げさな言い方になってしまって困ってしまいました。
>> とりあえずぼくがやれるのは単に新しいブログ・サーバを作ってみるだけという
>> のが現状です。
>> # こころざしは高く
>> # 目標は低く
--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From umejava ＠ mars.dti.ne.jp  Fri Jul 14 10:13:25 2006
From: umejava ＠ mars.dti.ne.jp (Masashi Umezawa)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3052] Re: Wiki としての  SuperSwiki
In-Reply-To: <44B654AD.6070609@yahoo.co.jp>
References: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>
	<44B3EEC1.30908@yahoo.co.jp>
	<20060712171106.F710.KOUBO2006@yengawa.jpn.org>
	<44B654AD.6070609@yahoo.co.jp>
Message-ID: <JW200607141013258.7615359@mars.dti.ne.jp>

こんにちは
梅澤です。

> 話は戻りますが、((perl))プラグインやSeasideのことを
> いろいろ議論してきましたが、すごいサイトがオープンしましたね。
> 
> YouOS
>   http://www.youos.com/
> 
> ここでは、JavaScriptでクライアントアプリをWeb上で開発できるようです。
> もっとも、協調作業なのかどうかはわかりませんが、
> デフォルトChat機能が搭載されていることを考えると、
> 協調作業も技術的にはまったく問題ないみたいです。
> 
> 世の中の進み方、早いですね。
> 

手前味噌になりますが、南谷君と私とで作成しているシステムにSqSquareという
ものがあります。

デモサイト:
http://www.sqsq.jp:9092/seaside/SqSquare

解説(プラグインインストールの仕方など):
http://sqsq.jp/SqSquare/2

これは、Squeakのプラグインを使い、皆で協働作業できるような仮想デスクトップ
をWebブラウザ上に作ってしまおうというものです。YouOSほど洗練されてはいませんが、
Kansasプロジェクトの考えを受け継ぎ、広大なデスクトップを提供するという点が特徴
になっています。
http://research.sun.com/ics/kansas.html

よろしければお試しください。

---
[:masashi | ^umezawa]

From umejava ＠ mars.dti.ne.jp  Fri Jul 14 10:41:21 2006
From: umejava ＠ mars.dti.ne.jp (Masashi Umezawa)
Date: Thu Dec  6 11:03:31 2007
Subject: [Squeak-ja: 3053] Re: Wiki としての  SuperSwiki
In-Reply-To: <44B6D76D.9030207@yahoo.co.jp>
References: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>
	<44B3EEC1.30908@yahoo.co.jp>
	<20060712173443.F713.KOUBO2006@yengawa.jpn.org>
	<44B6D714.8090201@yahoo.co.jp> <44B6D76D.9030207@yahoo.co.jp>
Message-ID: <JV2006071410412112.9291078@mars.dti.ne.jp>

こんにちは
梅澤です。

> Smalltalk (Squeak) を使ってみて少し気になったのですが、Smalltalk は
> イメージファイルという環境で区切られた閉鎖的な環境ではないかと。
> Smalltalk の環境がネットワーク上で共有できるなら、それこそ、
> OpenDoc は簡単に実現できそうなものですが、今ひとつ残念です。
> Smalltalk の部品オブジェクトをネットワーク上でやり取りできれば、
> ポートレットなど朝飯前に作れますよね。

わりとこうしたコンセプトに近いものとして、Croquetというものがあります。
http://www.opencroquet.org/

3D画面が非常に派手なため、よくLooking GlassのSqueak版と勘違いされてしまう
のですが、単なる3DのUIではなく、その実態は分散コラボレーション環境です。

Croquetの下で動いているプロトコルはTeaTimeと呼ばれているものです。
これはオブジェクトレプリケーションプロトコルであり、オブジェクトのプール
(アイランドと呼ばれています)を、複数イメージ間で自動的に同期させることで
分散環境を実現しています。

http://www.opencroquet.org/Site%20PDFs/2005%20Hedgehog%20Architecture.pdf

分散オブジェクトというと、パフォーマンス上の問題、スケーラビリティのなさ
などで、現在は下火になってしまった技術ですが、レプリケーションが自動的に
行われるという前提ができると、状況は一気に変わってくると思っています。

従来の分散オブジェクトでは、メッセージ送信をローカルとリモートで本当に
透過的に行うことができませんでした。リモートのオブジェクトに対する送信は、
ローカルに比べ、何百倍も遅いものとなってしまっていたからです。オブジェクト
レプリケーションが行われる環境では、リモートに対するメッセージ送信は、
実はローカルのレプリカに対するものなので、ネットワークの制限を気にせずに
本当に透過的にメッセージ送信ができます。

イメージファイルを皆で共有するというのも、そろそろ夢ではなくなりつつ
あるのかもしれません。

> もっとも、こういう方面での成長をとげてこなった(だろう,想像で言ってます)
> 現在の Smalltalk の環境の場合、先に述べたようにセキュリティの面で
> 問題がありますよね。外部からくるオブジェクトがそのままウィルスにも
> なってしまい得る。その意味では、能力の大きいPostScriptに制限をかけて、
> PDFが作成されたように、ネットワーク環境向けに、能力に制限をかけられる
> 環境 (サンドバッグモデル) の開発が望まれるところですね。

アイランドというプール内にオブジェクトを入れてしまうことで、アイランド間の
メッセージ送信を制限するという試みがなされているところです。個人的には
この部分の仕組みはまだまだ弱いと感じていますが、開発は進んでいるところです。

> 
> Smalltalk がんばれ!
> 

伝統的に、GO Smalltalk! というフレーズがよく使われます。;-)

---
[:masashi | ^umezawa]

From umejava ＠ mars.dti.ne.jp  Fri Jul 14 11:12:29 2006
From: umejava ＠ mars.dti.ne.jp (Masashi Umezawa)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3054] [ANN] Squeakware-edu-0.3 サーバ版
Message-ID: <JH2006071411122916.11160484@mars.dti.ne.jp>

こんにちは
梅澤です。

Squeakware-edu-0.3サーバ版をこのたび出しました。アナウンスさせていただきます。

Squeakware-edu-0.3サーバ版
http://swikis.ddo.jp/umejava/37

特徴:
* SuperSwiki2サーバ搭載
 o ブートとともにSuperSwiki2が自動起動します
 o Squeakware-eduクライアント(Squeakware-edu-0.3)はSuperSwiki2サーバを自動認識
   するので、eToysプロジェクトを簡単にアップロードできます
 o USBメモリからブートした場合、アップロードしたプロジェクトデータは
   USBメモリ自身に自動保存されます 

はやい話が、USBメモリにSqueakware-edu-0.3サーバを入れておけば、ブート
するだけで、eToysのプロジェクトサーバができあがるということです。

eToysワークショップでは、生徒さんの作成された作品を、フロッピーかなにかに
保存して、それを後で集めるということが行われているわけですが、
Squeakware-edu-0.3サーバ版を使うことで、簡単操作で一カ所にプロジェクトを
アップロードし、閲覧できるようになります。USBメモリ一本ですべてが済むので、
教室間や学校間の持ち運びにも便利です。

ぜひぜひ、お試しください。

以下補足:

Squeakwareは、コンパクトでカスタマイズしやすいSqueak入りのOS(Linux)です。
http://swikis.ddo.jp/umejava/11

Squeakware-edu-0.3サーバ版は、おもにeToysワークショップのサーバ用途向けという
カスタマイズなわけですが、工夫次第ではもっといろいろな応用が考えられる
でしょう。

---
[:masashi | ^umezawa]

From koubo2006 ＠ yengawa.jpn.org  Fri Jul 14 11:43:45 2006
From: koubo2006 ＠ yengawa.jpn.org (Koji Yokokawa)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3055] Re: Wiki としての SuperSwiki
In-Reply-To: <44B654AD.6070609@yahoo.co.jp>
References: <20060712171106.F710.KOUBO2006@yengawa.jpn.org>
	<44B654AD.6070609@yahoo.co.jp>
Message-ID: <20060714113157.F72A.KOUBO2006@yengawa.jpn.org>

横川です。
すっかりSqueakネタから(Wikiからも)離れてますが、もう一言お許しください。

「エージェント」という言葉が多くの研究分野で異なった定義で使われて、くわ
えて非常に夢にあふれているので、「マルチエージェント技術」についてたくさ
んの誤解がうまれていると思いますので、ここで弁解を。。。

少なくともFIPAで定義しているエージェントは非常に限定された(ともするとツ
マラナイ)ソフトウェア技術です。あえてそっけなく言うと「動的に入れ替え可
能なソフトウェア・コンポーネント」と表現できると思います。

こう観るとソフトウェア・コンポーネントとあまり変わりません。その意味で現
在実用になっている技術と地続きの実直なソフトウェア技術だと思います。

> 役割で分担するエージェントと、
> 機能で分担するオブジェクトとでは、
> 決定的に違うのは何でしょうか。

これはいろいろな意見が出そうなところですが、ぼくは「開発者のマインドセッ
ト(考え方)が違う」というところを第一に挙げたいです。
構造化技術で開発するときとオブジェクト指向技術で開発するときの開発者のマ
インドセットは異なります。この違いが開発効率や安全性などさまざまな影響を
与えています。
同じように、マルチエージェント技術で開発するときのマインドセットも異なり、
開発にいろいろな(きっと良い)影響が出そうだと感じてます。

では。

On Thu, 13 Jul 2006 23:11:57 +0900
"NAKATA, Shunsuke" <scriptonwikipage@yahoo.co.jp> wrote:

> 横川さん
> 
> こちらこそ、お付き合いありがどうございます。
> 
> サイト拝見しました。(というかこれまでも見たことがあります)
> 
> 役割で分担するエージェントと、
> 機能で分担するオブジェクトとでは、
> 決定的に違うのは何でしょうか。
> --
> 能動性/受動性 という点では、スレッドで動作する
> java.lang.Runnable なオブジェクトは、
> エージェントということになりますよね。
> 
> 10年以上前ですが、所 真理雄 氏 が研究目的で、
> Smalltalk-80 を並列化して、Concurrent Smalltalk
> というものをつくってましたが、
> それに近いものなのでしょうかね。
> (ご存知ありませんよね)
> --
> インターフェースの汎用性が決定的な違いなのでしょうか。
> LISPのevalはS式という汎用データ形式を受け付ける
> 天蓋孤独なエージェントなのでしょうか。
> --
> あるいは、「S式を受け付け、能動的かつ協調的に機能する
> 複数のオブジェクトの集まり」というというところなのでしょうか。
> 
> おおよそのところ、蟻の家族とか免疫細胞群
> (T細胞,B細胞,マクロファージ,...)という
> イメージだとは思いますが、
> --
> だとしたら、エージェント技術は、やはり、
> 一人の人(またはひとつの団体)が最初から役割を
> はっきりと決めた、役割分担のできた能動体の集団
> という形で実装されるのだろうと思いました。
> 
> だれが自分の家族の一員か、フェロモン・触覚、あるいは、
> レセプターで確認しあって作業するというものになりますね。
> 
> 家族がばらばらになると機能できない、、、
> 
> モバイルエージェントとなると、誰かが号令をかけて、
> 一族が一斉に移動することになるんでしょうね。
> 
> 
> なんか、すごいですね。エージェントって。
> 
> "Star Trek" にでてくる、Borg とか ナノプローブ みたいな
> ものを作ろうとしているようにも思えてきました。怖い感じも
> しますね。特に軍事目的で国家規模で開発すれば、今のコンピュー
> ターウィルスなんて赤子に思える技術なのでしょうね。
> 
> ------
> 話は戻りますが、((perl))プラグインやSeasideのことを
> いろいろ議論してきましたが、すごいサイトがオープンしましたね。
> 
> YouOS
> 	http://www.youos.com/
> 
> ここでは、JavaScriptでクライアントアプリをWeb上で開発できるようです。
> もっとも、協調作業なのかどうかはわかりませんが、
> デフォルトChat機能が搭載されていることを考えると、
> 協調作業も技術的にはまったく問題ないみたいです。
> 
> 世の中の進み方、早いですね。
> 
> 
> 
> 
> ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
> > Swimmyシステム自体はマルチエージェント開発実行環境ですが、その中のエージェ
> > ントのプログラミングをEtoyでプログラムされたオブジェクトをさらに組み合わ
> > せるという方法でやっているのでご紹介しました。
> > 厳密に言うと高階とエージェントとは関係ありません。
> > (宣伝に走って、混乱させてしまったかもしれません。すみません。)
> > 
> > 結合力と考えると関数とマルチエージェントの間にオブジェクト指向が入ると思
> > います。(オブジェクト指向とは計算をオブジェクトという単位で区切ってオブ
> > ジェクト同士のメッセージのやり取りで計算を進める技術です。)
> > マルチエージェントはメッセージのやり取りをさらに柔軟にしています。
> > 
> > マルチエージェントの実用化にはおっしゃるとおりの問題があります。
> > 現在それを解決する方向として具体的に進んでいるものの一つはFIPAというエー
> > ジェント間コミュニケーションの標準規格化です。
> > 
> > FIPAホームページ
> > http://www.fipa.org/
> > 
> > FIPAのとても詳しい説明。
> > 日本語!チュートリアルつき!
> > http://www.mamezou.net/AgentVillage/index.html
> > (実はこれも宣伝です。注意;-)
> > 
> > 個人的感想ですが、オブジェクト指向が出始めの頃「それって関数でできるじゃ
> > ん」といわれていたようですが、現在のエージェント技術も同じような境遇にあ
> > るように感じます。
> > 
> > オブジェクト指向技術ではタイプやインターフェイスと呼ばれる仕組みを利用し
> > て同型性をプログラミングに生かす方法が広く利用されていますね。
> > マルチエージェント技術ではロール(役割)によって同型性を取り入れています。
> > ぼくはこれをだんだんと「利用者＝作成者」環境に近づく過程だと感じているの
> > ですが、これは意見の分かれるところでしょう。
> 
> --------------------------------------
> Let's start Yahoo! Auction  -  Free Campaign Now!
> http://pr.mail.yahoo.co.jp/auction/

-- !
Koji Yokokawa <koubo2006@yengawa.jpn.org>
    http://yengawa.com/
    ^self new!


From hanyuda ＠ mamezou.com  Fri Jul 14 16:03:50 2006
From: hanyuda ＠ mamezou.com (Hanyuda Eiiti)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3056] Re: Wiki としての SuperSwiki
In-Reply-To: <20060714113157.F72A.KOUBO2006@yengawa.jpn.org>
References: <44B654AD.6070609@yahoo.co.jp>
	<20060714113157.F72A.KOUBO2006@yengawa.jpn.org>
Message-ID: <20060714153747.3794.HANYUDA@mamezou.com>

横川さん，みなさん

羽生田です。お初です。

エージェントの可能性・有効性に関しての議論が続いているようなので
ちょっと情報を。

いまたまたま情報処理学会誌2006．6月号を読んでいたら
情報処理学会創立45周年記念論文の優秀論文賞を受けた

「妖精・妖怪の復権--新しい「環境知能」像の提案」
NTTコミュニケーション科学基礎研究所　前田・南・堂坂

というのを発見し読んでみるとこれがやたら面白い。
お勧めします。

Ambient Intelligenceと呼んでいるんですね。ロボットもエージェントもユビキタスも
アナログな古典的な電話も含めて広く「環境知能」として捉えなおして
昔はどこにでも潜んでいた妖精・妖怪と同じような愛すべき存在として規定しています。

笑えるのは仮想シナリオが７つ用意されていて
「失恋」「結婚記念日」「夫婦喧嘩」「老後」「会議」等の状況で
いかに環境知性が自然にサポートを行えそうかを検討している点です。
なんとなくNTTのCMのようでわざとらしさを感じます（*）が，著者たちは真剣なのでしょう。
なにしろ出てくるエージェントの名前が「まっしゅるーむ」ですから。

最後に環境知能23個の未解決問題というのを提示しているのもいいセンスです。
１．うるさくても誰の声でも聞き分けられる
２．ちょっと声を聞けば真似ができる
。。。
６．思いがけないことを気づかせてくれる
。。。
１０．人の心を読む（心理推定）
・・・
１７．10年経っても捨てられない機器
。。。
２１．誰かとともに暮らす

といった感じで結構面白い選択がなされています。
17が笑えます。すぐ捨てられてしまうと，過去の経験の共有＝＞郷愁といった
感性的なサポートができなくなるからです。

以上ご参考までにご紹介しました。ぜひ読んでみてください。
宣伝：
「情報処理学会誌」は日経XXよりは，内容濃いですぜ。
去年はずっとライバルのHaskelプログラミングの連載してましたし。
入会をお勧めしておきます。（わたし一応，SIGSE主査をやっているもので）

On Fri, 14 Jul 2006 11:43:45 +0900
Koji Yokokawa <koubo2006@yengawa.jpn.org> wrote:

> 横川です。
> すっかりSqueakネタから(Wikiからも)離れてますが、もう一言お許しください。
> 
> 「エージェント」という言葉が多くの研究分野で異なった定義で使われて、くわ
> えて非常に夢にあふれているので、「マルチエージェント技術」についてたくさ
> んの誤解がうまれていると思いますので、ここで弁解を。。。
> 
> 少なくともFIPAで定義しているエージェントは非常に限定された(ともするとツ
> マラナイ)ソフトウェア技術です。あえてそっけなく言うと「動的に入れ替え可
> 能なソフトウェア・コンポーネント」と表現できると思います。
> 
> こう観るとソフトウェア・コンポーネントとあまり変わりません。その意味で現
> 在実用になっている技術と地続きの実直なソフトウェア技術だと思います。
> 
> > 役割で分担するエージェントと、
> > 機能で分担するオブジェクトとでは、
> > 決定的に違うのは何でしょうか。
> 
> これはいろいろな意見が出そうなところですが、ぼくは「開発者のマインドセッ
> ト(考え方)が違う」というところを第一に挙げたいです。
> 構造化技術で開発するときとオブジェクト指向技術で開発するときの開発者のマ
> インドセットは異なります。この違いが開発効率や安全性などさまざまな影響を
> 与えています。
> 同じように、マルチエージェント技術で開発するときのマインドセットも異なり、
> 開発にいろいろな(きっと良い)影響が出そうだと感じてます。
> 
> では。
> 
> On Thu, 13 Jul 2006 23:11:57 +0900
> "NAKATA, Shunsuke" <scriptonwikipage@yahoo.co.jp> wrote:
> 
> > 横川さん
> > 
> > こちらこそ、お付き合いありがどうございます。
> > 
> > サイト拝見しました。(というかこれまでも見たことがあります)
> > 
> > 役割で分担するエージェントと、
> > 機能で分担するオブジェクトとでは、
> > 決定的に違うのは何でしょうか。
> > --
> > 能動性/受動性 という点では、スレッドで動作する
> > java.lang.Runnable なオブジェクトは、
> > エージェントということになりますよね。
> > 
> > 10年以上前ですが、所 真理雄 氏 が研究目的で、
> > Smalltalk-80 を並列化して、Concurrent Smalltalk
> > というものをつくってましたが、
> > それに近いものなのでしょうかね。
> > (ご存知ありませんよね)
> > --
> > インターフェースの汎用性が決定的な違いなのでしょうか。
> > LISPのevalはS式という汎用データ形式を受け付ける
> > 天蓋孤独なエージェントなのでしょうか。
> > --
> > あるいは、「S式を受け付け、能動的かつ協調的に機能する
> > 複数のオブジェクトの集まり」というというところなのでしょうか。
> > 
> > おおよそのところ、蟻の家族とか免疫細胞群
> > (T細胞,B細胞,マクロファージ,...)という
> > イメージだとは思いますが、
> > --
> > だとしたら、エージェント技術は、やはり、
> > 一人の人(またはひとつの団体)が最初から役割を
> > はっきりと決めた、役割分担のできた能動体の集団
> > という形で実装されるのだろうと思いました。
> > 
> > だれが自分の家族の一員か、フェロモン・触覚、あるいは、
> > レセプターで確認しあって作業するというものになりますね。
> > 
> > 家族がばらばらになると機能できない、、、
> > 
> > モバイルエージェントとなると、誰かが号令をかけて、
> > 一族が一斉に移動することになるんでしょうね。
> > 
> > 
> > なんか、すごいですね。エージェントって。
> > 
> > "Star Trek" にでてくる、Borg とか ナノプローブ みたいな
> > ものを作ろうとしているようにも思えてきました。怖い感じも
> > しますね。特に軍事目的で国家規模で開発すれば、今のコンピュー
> > ターウィルスなんて赤子に思える技術なのでしょうね。
> > 
> > ------
> > 話は戻りますが、((perl))プラグインやSeasideのことを
> > いろいろ議論してきましたが、すごいサイトがオープンしましたね。
> > 
> > YouOS
> > 	http://www.youos.com/
> > 
> > ここでは、JavaScriptでクライアントアプリをWeb上で開発できるようです。
> > もっとも、協調作業なのかどうかはわかりませんが、
> > デフォルトChat機能が搭載されていることを考えると、
> > 協調作業も技術的にはまったく問題ないみたいです。
> > 
> > 世の中の進み方、早いですね。
> > 
> > 
> > 
> > 
> > ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
> > > Swimmyシステム自体はマルチエージェント開発実行環境ですが、その中のエージェ
> > > ントのプログラミングをEtoyでプログラムされたオブジェクトをさらに組み合わ
> > > せるという方法でやっているのでご紹介しました。
> > > 厳密に言うと高階とエージェントとは関係ありません。
> > > (宣伝に走って、混乱させてしまったかもしれません。すみません。)
> > > 
> > > 結合力と考えると関数とマルチエージェントの間にオブジェクト指向が入ると思
> > > います。(オブジェクト指向とは計算をオブジェクトという単位で区切ってオブ
> > > ジェクト同士のメッセージのやり取りで計算を進める技術です。)
> > > マルチエージェントはメッセージのやり取りをさらに柔軟にしています。
> > > 
> > > マルチエージェントの実用化にはおっしゃるとおりの問題があります。
> > > 現在それを解決する方向として具体的に進んでいるものの一つはFIPAというエー
> > > ジェント間コミュニケーションの標準規格化です。
> > > 
> > > FIPAホームページ
> > > http://www.fipa.org/
> > > 
> > > FIPAのとても詳しい説明。
> > > 日本語!チュートリアルつき!
> > > http://www.mamezou.net/AgentVillage/index.html
> > > (実はこれも宣伝です。注意;-)
> > > 
> > > 個人的感想ですが、オブジェクト指向が出始めの頃「それって関数でできるじゃ
> > > ん」といわれていたようですが、現在のエージェント技術も同じような境遇にあ
> > > るように感じます。
> > > 
> > > オブジェクト指向技術ではタイプやインターフェイスと呼ばれる仕組みを利用し
> > > て同型性をプログラミングに生かす方法が広く利用されていますね。
> > > マルチエージェント技術ではロール(役割)によって同型性を取り入れています。
> > > ぼくはこれをだんだんと「利用者＝作成者」環境に近づく過程だと感じているの
> > > ですが、これは意見の分かれるところでしょう。
> > 
> > --------------------------------------
> > Let's start Yahoo! Auction  -  Free Campaign Now!
> > http://pr.mail.yahoo.co.jp/auction/
> 
> -- !
> Koji Yokokawa <koubo2006@yengawa.jpn.org>
>     http://yengawa.com/
>     ^self new!

Hanyuda Eiiti,  hanyuda@mamezou.com
Chairperson, Object Software Engineering Consultant, Mentor
MAMEZOU CO., LTD   http://www.mamezou.com/
163-0434 Nisi-Sinzyuku 2-1-1 Sinzyuku-Mitui building 34F, Sinzyuku-ku, Tokyo JAPAN
TEL +81-03-5339-2100   FAX +81-03-5339-2295


From koubo2006 ＠ yengawa.jpn.org  Sat Jul 15 10:46:41 2006
From: koubo2006 ＠ yengawa.jpn.org (Koji Yokokawa)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3057] Re: Wiki としての SuperSwiki
In-Reply-To: <44B6D76D.9030207@yahoo.co.jp>
References: <44B6D714.8090201@yahoo.co.jp> <44B6D76D.9030207@yahoo.co.jp>
Message-ID: <20060715065145.1E96.KOUBO2006@yengawa.jpn.org>

横川です。

On Fri, 14 Jul 2006 08:29:49 +0900
"NAKATA, Shunsuke" <scriptonwikipage@yahoo.co.jp> wrote:

> 横川さん
> 
> 中田です。
> 
> 
> 私は職場でWiki(Wifky)で業務用のサイトを運営していて感じるのは、
> 「便利」というのは究極的にはその人それぞれで違うということてです。
> 
> 私の職場はほとんどは技術者なのですが、中には技術補助の業務の方や、
> 庶務(人事関連などを扱えう業務)やシステム管理の担当者など、業務内容が
> 明らかに異なる人がいます。圧倒的多数の閲覧者であろう技術者のみに
> 焦点をあててサイトを構築すると、技術者には便利なサイトになるでしょうが、
> その他の業務の方には不便になってしまいます。
> 
> こういう問題を解決するには、ポートレットというところに行き着きますよね。
> サイトのトップページを利用者一人一人が自分の必要に合わせて変えてゆく。
> 私の知る限り既存のポータルサーバーというのは、ポートレットはそのサーバー
> の中だけで閉じてるものです。
> 
> 例えば人によっては他部署の運営するポートレットを自分のページに
> 貼り付けたいと思う人もいますが、それはポートレットに共通の規格が
> ないためにそれは適わない。(そのページごと内部フレームIFRAMEとして
> 取込んで表示してしまうポートレットを自部署が使うポータルにあれば
> それに近しいことはできる形になりますが、)
> 
> 世の中のポートレットに統一した規格があれば、あちこちのサイトの
> ポートレットを取込んで、自分にとって本当に使いやすいページにできますね。
> 
> 横川さんがおっしゃるWeb2.0時代の情報サイトというのは、
> そういうものなのでしょうか。

ポートレットというとJavaのポートレットのことでしょうか。
(ポートレットについて詳しくないのですが)これはぼくの考えていることとは違
うようです。
でも、Webアプリの流通やパーソナライズは利用しやすさにとても大きな影響を
与える問題です。この方向では、WebサービスとUIコンポーネントという構成が
あるのではないでしょうか?
たとえば、Pier上で他部署やらGoogleやらAmazonやらのWebサービスを利用する
ためのコンポーネントを(デモで○×ゲームを配置したように)画面に配置すると
いうのはいかがですか?


さてぼくが興味を持っているのは何かというと、Webに流れる情報の意味の方で
す。
Webを単に印刷雑誌の紙面みたいにとらえるのではなくて、意味を持つ情報とし
て取り扱う技術が模索されています。セマンティックウェブと呼ばれるものです。
もしも情報の意味をうまく取り扱えたら、ブログを読み書きするなどのInternat
上の普通の人々の日々の活動がそのままプログラミングしてることになるような
環境ができるかもしれません。

うまく言えないので、じれったい思いをさせてすみません。でも、まだアイデア
がまとまっていないので大言壮語になりそうです(もう既にそうとうなってるか
も)。今はこれくらいで勘弁してください。

...
> 
> ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
> 
> >> ぼくは信頼や完成度をどう評価するかという評価基準から変えてみようと思って
> >> います。「辞書とはこういうものだ」という今ある常識自体を疑ってみようとい
> >> う考え方です。
> >> ですから、「Wikipedia自体がどうなるか」を言っているのではありません。辞
> >> 書のように見えてまったく別の仕組み、もしくはぜんぜん辞書っぽくないけど辞
> >> 書の項目を調べるのと同じような効果があるものができないかと考えてます。
> >>
> >> たとえば、Web2.0という得体の知れない言葉を調べるとしたら、去年のの解釈と
> >> 最近1ヶ月の解釈では違っていたり、経済方面の人とIT方面の人ではまたぜんぜ
> >> ん違っていたりというのは当たり前です。古くて変わらない情報は辞書を調べれ
> >> ばいいけど、新しくて活発に議論されている情報のためのツールはほとんど無い
> >> というのが現状でしょう。
> >>
> >> 実はここまで書いて、大げさな言い方になってしまって困ってしまいました。
> >> とりあえずぼくがやれるのは単に新しいブログ・サーバを作ってみるだけという
> >> のが現状です。
> >> # こころざしは高く
> >> # 目標は低く
> --------------------------------------

-- !
Koji Yokokawa <koubo2006@yengawa.jpn.org>
    http://yengawa.com/
    ^self new!


From scriptonwikipage ＠ yahoo.co.jp  Sat Jul 15 15:07:20 2006
From: scriptonwikipage ＠ yahoo.co.jp (NAKATA, Shunsuke)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3058] Re: Wiki としての SuperSwiki
In-Reply-To: <20060715065145.1E96.KOUBO2006@yengawa.jpn.org>
References: <44B6D714.8090201@yahoo.co.jp> <44B6D76D.9030207@yahoo.co.jp>
	<20060715065145.1E96.KOUBO2006@yengawa.jpn.org>
Message-ID: <44B88618.7060308@yahoo.co.jp>

--------------------------------------------------
* このメーリングリストを受信されている方々へ:
以下、SmalltalkともWikiとも必ずしも関係がない内容になっていますが、、
話の流れからこちらのメーリングリストで続けさせていただくことを、
ご容赦くだされば幸いです。
--------------------------------------------------


横川さん

中田です。返信、ありがとうございます。


>>>> ポートレットというとJavaのポートレットのことでしょうか。
>>>> (ポートレットについて詳しくないのですが)
>>>> これはぼくの考えていることとは違うようです。

私も実のところポートレットについては詳しくありません。
Javaにもみポートレットがのあるのですね!?



>>>> この方向では、WebサービスとUIコンポーネントという構成が
>>>> あるのではないでしょうか?

>>>> たとえば、Pier上で他部署やらGoogleやらAmazonやらの
>>>> Webサービスを利用するためのコンポーネントを
>>>> (デモで○×ゲームを配置したように)画面に配置すると
>>>> いうのはいかがですか?

私がイメージしているのは、横川さんのそれと同じものだと思います。
ひとつのページの中に取込んで使うWebコンテンツのコンポーネントです。

----
■ 標準化の問題

私の会社にある社内共通のサイトはポータルサイトになっています。
社内イベントのコーナー(総務部の管理)、社長のコメントコーナー、
業務リンクのコーナー、共通設備の稼動状況をしらせるコーナーなど、
さまざまなコーナーが一つのページに貼り付けてあります。
(それぞれのコーナーがポートレットになっています。)

ですが、それらのポートレットを外部から取込むことはできません。
例えば、私の部署には部のウェブサイトがあり。それはOracleではなく、
Wiki(Wifky)なのですが、そのページ内に上記のポートレットを
(たとえば社内イベントのポートレットを) 貼り付けることはできません。

「ポートレット」(あるは Web部品) の標準規格がない (のですねよ!?)
ことが問題で、W3Cなどの規格があれば、世の中のポートレットを
自分のサイトに簡単にはりつけられるというメリットがあると思います。


これは技術的な問題ではありません。早く標準化されるてほしいものです。

-----
■ 簡単に作成できるポートレット!?

ページに貼り付けられる部品をクライアントサイトから
分類すると次のようになると思います。

(1) 静的なHTMLコード (純粋なHTMLコードだけ)
(2) スクリプトを含むHTMLコード (HTML+JavaScriptなど)
(3) クライアントサイドで実行される部品 (Java Applet, Flash など)


Wiki(s) プラグイン, Seaside 部品, Java Servlet, Oracle Portlet など
を恐らくサーバーサイドで実行して静的なHTMLコードのみを表示する(1)を
出力しているものと思います。

株価や天気図やチャット掲示板など、刻々と変化するものモニター・編集を
可能にするには、(2)か(3)が必要ですね。YouOSは(2)と(3)でしょうか。

提供する情報の内容の性質によって使い分ければよいものですが、
さまざまな技術を知らないと使い分けられないという現状は残念ですね。

残念ながらそれらの技術は、必ずしも技術に詳しくないひとや、
詳しくなりたいと願っているわけではない人にとって、
数日で身につくほど簡単に理解できるものではありません。

Wikipediaの記事のように、だれもが簡単に新しいサービス(ポートレット)
を作成できるような環境が望ましいところです。その意味でも、感覚的に
理解でき、視覚的に部品を作成できる環境は必要だと思います。

----
■ 知的エージェントとポートレット

世の中にはさまざまな技術が存在しますが、私たちが必要としているのは、
結局のところ、自分にとってそのとき必要な情報への迅速なアクセスです。
技術やサービスはそれらを実現する方法に過ぎません。

情報提供といえば、コールセンターがあります。利用者が電話経由で
目下の問題への解決法ほ相談するものですね。コールセンターには
さまざまなオペーレーターがいますが、利用者にとって気の利いた
オペレーターに当たりたいものです: 尋ねてはいないが知っておくと
よい情報を提供してくれるる。不十分な質問から内容を汲み取ってくれる。

(知的)エージェントの話がありましたね。ポートレット(Web部品)にも
知的エージェントの性質があれば利用にとってさらに便利なサービス
を提供できるかも知れません: 同じページ内に取り込まれている
他のポートレットを見渡して、その利用者の必要としてることや関心事を
推察し、補足となる情報を提供してくれる。ユーザーが頻繁にクリックする
情報を大きく表示したり、アクセスしやすい位置に移動してくれる。

そんな情報提供システムになればうれしいですね。

----

以上は私のただの夢です。私自身にはそれを実現する技術も知識もありません。
私にできることといえば、職場内のウェブサイトを手作業で更新/変更するぐら
いです。このスレッドをご覧の方でこの様な考え方を理解し、実現できる立場
にある方がいらっしゃれば、一つの意見として留意して下されば幸いです。



━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
> さてぼくが興味を持っているのは何かというと、Webに流れる情報の意味の方で
> す。
> Webを単に印刷雑誌の紙面みたいにとらえるのではなくて、意味を持つ情報とし
> て取り扱う技術が模索されています。セマンティックウェブと呼ばれるものです。
> もしも情報の意味をうまく取り扱えたら、ブログを読み書きするなどのInternat
> 上の普通の人々の日々の活動がそのままプログラミングしてることになるような
> 環境ができるかもしれません。
> 
> うまく言えないので、じれったい思いをさせてすみません。でも、まだアイデア
> がまとまっていないので大言壮語になりそうです(もう既にそうとうなってるか
> も)。今はこれくらいで勘弁してください。
--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From scriptonwikipage ＠ yahoo.co.jp  Sun Jul 16 05:40:21 2006
From: scriptonwikipage ＠ yahoo.co.jp (NAKATA, Shunsuke)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3059] Re: Wiki としての  SuperSwiki
In-Reply-To: <JW200607141013258.7615359@mars.dti.ne.jp>
References: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>	<44B3EEC1.30908@yahoo.co.jp>	<20060712171106.F710.KOUBO2006@yengawa.jpn.org>	<44B654AD.6070609@yahoo.co.jp>
	<JW200607141013258.7615359@mars.dti.ne.jp>
Message-ID: <44B952B5.2090702@yahoo.co.jp>

梅澤さん

中田です。返信、ありがとうございます。

「協調作業」という言葉に別の解釈があることを忘れていました。

サイトを拝見しました。SqSquare や Kansas は作業の「同時性」
に重点を置いたシステムのようですね。

同時性のある協調作業を支援するツールとしては、Microsoft NetMeeting
や Microsoft Windows XP の リモートアシスタンス がありますね。
私は仕事で NetMeeting をよく使います。これらのソフトウェアでも
デスクトップを共有して、互いのデスクトップをネットワーク越しに
操作できます。SqSquare や Kansas はそれと似ていますね。

私がイメージしていた協調作業は同時性がないWikipediaのそれです。

作業中に同時性が必要とされるか否かは作業の内容によるものですね。

音楽の作曲や芝居の台本の読み合わせ、ネットワークゲームなど、
もともと実時間性が強い作業では同時性が必要とされますね。
また、道順を教えるとか、本の校正をしたり、レントゲン写真の
説明をする場合や、手話で会話したい場合など、視覚性があるものを
対象とする場合も同時性が必要ですね。

ですが、プログラミング作業の場合は同時性というのは必ずしも
必要ないのではないかと考えいます。(もちろん同時性があっても
問題ありませんが。) プログラミング作業に同時性のある協調作業
環境を導入するとプログラミングスタイルはどのように変わると
お考えでしょうか。残念ながら私には想像ができませんでした。

よろしければ、どのようなビジョンをお持ちなのか、教えてください。



━━━━━━━━━━━━━━━━━━━━━━━━━
こんにちは
梅澤です。

手前味噌になりますが、南谷君と私とで作成しているシステム
にSqSquareというものがあります。

デモサイト:
http://www.sqsq.jp:9092/seaside/SqSquare

解説(プラグインインストールの仕方など):
http://sqsq.jp/SqSquare/2

これは、Squeakのプラグインを使い、皆で協働作業できるような仮想デスクトップ
をWebブラウザ上に作ってしまおうというものです。YouOSほど洗練されてはいま
せんが、
Kansasプロジェクトの考えを受け継ぎ、広大なデスクトップを提供するという点
が特徴
になっています。
http://research.sun.com/ics/kansas.html

よろしければお試しください。

---
[:masashi | ^umezawa]
--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From umejava ＠ mars.dti.ne.jp  Sun Jul 16 14:36:38 2006
From: umejava ＠ mars.dti.ne.jp (Masashi Umezawa)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3060] Re: Wiki としての   SuperSwiki
In-Reply-To: <44B952B5.2090702@yahoo.co.jp>
References: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>
	<44B3EEC1.30908@yahoo.co.jp>
	<20060712171106.F710.KOUBO2006@yengawa.jpn.org>
	<44B654AD.6070609@yahoo.co.jp>
	<JW200607141013258.7615359@mars.dti.ne.jp>
	<44B952B5.2090702@yahoo.co.jp>
Message-ID: <JR2006071614363812.5933109@mars.dti.ne.jp>

こんにちは
梅澤です。

> ですが、プログラミング作業の場合は同時性というのは必ずしも
> 必要ないのではないかと考えいます。(もちろん同時性があっても
> 問題ありませんが。) プログラミング作業に同時性のある協調作業
> 環境を導入するとプログラミングスタイルはどのように変わると
> お考えでしょうか。残念ながら私には想像ができませんでした。
> 
> よろしければ、どのようなビジョンをお持ちなのか、教えてください。

端的に言えば、バーチャルな環境でもペア(もしくはそれ以上の人数の)
プログラミングができるようになるということだと思います。

ペアプログラミングの効用としては下記が詳しいです。
http://www.pairprogramming.com/

同時性のメリットとして重要なのは、プログラミングしている課程が相手に伝わる
ということだと思います。同時性がない従来の環境では、プログラミングのある時点
での成果(ソースコード)を共有することができても、そこに至るまでの作業や思考の
過程を共有することができません。しかし良いプログラマになるには、名人と呼ばれる
人のツールの使い方の所作や、問題解決に至っていくまでのコードの変遷のさせ方
といったものを、見て学ぶ(盗むとも言われますが)ことが重要です。静的な
ドキュメントでは伝わりにくいこうした情報が伝わることで、全体としてのスキル
アップが見込めるでしょう。

もう一つ上げると、従来のソースコードというファイル単位でのロックを排除
できるということがあると思います。オブジェクト指向の言語や開発環境を使って
いても、なぜか開発の単位は物理的なファイルになってしまっているという
のが現状です。しかし同時性が十分にあれば、相手が開発環境の中でコードのどこを
さわっているかは自明なわけで、ファイルのロックに縛られない、そこにある
オブジェクトのみを対象とした、もっと自由な協働作業が可能になるでしょう。

---
[:masashi | ^umezawa]

From scriptonwikipage ＠ yahoo.co.jp  Sun Jul 16 19:11:03 2006
From: scriptonwikipage ＠ yahoo.co.jp (NAKATA, Shunsuke)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3061] Re: Wiki としての   SuperSwiki
In-Reply-To: <JR2006071614363812.5933109@mars.dti.ne.jp>
References: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>	<44B3EEC1.30908@yahoo.co.jp>	<20060712171106.F710.KOUBO2006@yengawa.jpn.org>	<44B654AD.6070609@yahoo.co.jp>	<JW200607141013258.7615359@mars.dti.ne.jp>	<44B952B5.2090702@yahoo.co.jp>
	<JR2006071614363812.5933109@mars.dti.ne.jp>
Message-ID: <44BA10B7.2030401@yahoo.co.jp>

梅澤さん

中田です。返信、ありがとうございます。

SqSquare や Kansas は ペアプログラミングが可能にして、かつ、
コードのブロックを避けられる開発環境ということですね。
「協調作業」にはそういう発展もあったのですねぇ〜。

私は次の点で Wikipedia は興味深いと感じています:
(1) 全体の機能を停止するこなく少しずつ成長していく。
(2) 成長の過程は、相互不認知の不特定多数により非同期になされる。
(3) 指揮をとる人物や団体はない。(上書き合戦はあるようですが)

とりわけ (1) については、従来の本の出版やパッケージアプリケーション
開発などとは大きく異なるもので、非常に興味深く感じています。

SqSquare や Kansas はこの様な形態のソフトウェア環境ではない
でしょうから、その意味では、私が言っている「協調作業」という
言葉とは違うものかもしれません。ですが、同時性という概念は、
上述の概念と矛盾しない直交するものですので、今後のソフトウェア
のあり方として両者が融合する形で発展することもあり得ますね。

SqSquare や Kansas の今後が楽しみです。



━━━━━━━━━━━━━━━━━━━━━━━━━
こんにちは
梅澤です。

端的に言えば、バーチャルな環境でもペア(もしくはそれ以上の人数の)
プログラミングができるようになるということだと思います。

ペアプログラミングの効用としては下記が詳しいです。
http://www.pairprogramming.com/

同時性のメリットとして重要なのは、プログラミングしている課程が相手に伝わる
ということだと思います。同時性がない従来の環境では、プログラミングのある時点
での成果(ソースコード)を共有することができても、そこに至るまでの作業や思考の
過程を共有することができません。しかし良いプログラマになるには、名人と呼
ばれる
人のツールの使い方の所作や、問題解決に至っていくまでのコードの変遷のさせ方
といったものを、見て学ぶ(盗むとも言われますが)ことが重要です。静的な
ドキュメントでは伝わりにくいこうした情報が伝わることで、全体としてのスキル
アップが見込めるでしょう。

もう一つ上げると、従来のソースコードというファイル単位でのロックを排除
できるということがあると思います。オブジェクト指向の言語や開発環境を使って
いても、なぜか開発の単位は物理的なファイルになってしまっているという
のが現状です。しかし同時性が十分にあれば、相手が開発環境の中でコードのどこを
さわっているかは自明なわけで、ファイルのロックに縛られない、そこにある
オブジェクトのみを対象とした、もっと自由な協働作業が可能になるでしょう。

---
[:masashi | ^umezawa]

--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From yoshiki ＠ squeakland.org  Mon Jul 17 13:39:11 2006
From: yoshiki ＠ squeakland.org (Yoshiki Ohshima)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3062] Re: Wiki としての SuperSwiki
In-Reply-To: <44BA10B7.2030401@yahoo.co.jp>
References: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>
	<44B3EEC1.30908@yahoo.co.jp>
	<20060712171106.F710.KOUBO2006@yengawa.jpn.org>
	<44B654AD.6070609@yahoo.co.jp>
	<JW200607141013258.7615359@mars.dti.ne.jp>
	<44B952B5.2090702@yahoo.co.jp>
	<JR2006071614363812.5933109@mars.dti.ne.jp>
	<44BA10B7.2030401@yahoo.co.jp>
Message-ID: <uu05g4zgw.wl%yoshiki@squeakland.org>

  おおしまです。

> SqSquare や Kansas はこの様な形態のソフトウェア環境ではない
> でしょうから、その意味では、私が言っている「協調作業」という
> 言葉とは違うものかもしれません。ですが、同時性という概念は、
> 上述の概念と矛盾しない直交するものですので、今後のソフトウェア
> のあり方として両者が融合する形で発展することもあり得ますね。

  話がいつ出るかいつ出るかと思っていましたが、別の、というかSqSquareと
将来組み合わされるものとして、WysiWikiという仮称で呼ばれている機能を実
現したTinLizzieというシステムも開発中です。これは、eToysのようなタイプ
のコンテンツをwebにおき、そのコンテンツを名前の通りに非同期的に編集で
きるようにしてお互いの間をハイパーリンクでつなぐこともできるというもの
です。

  利点としては、非同期な協調をしつつ、SqSquareでそのままつながって同期
的にもなれる、というあたりを狙っています。

-- Yoshiki

From "土本 (Florian) 強  Wed Jul 19 19:11:56 2006
From: "土本 (Florian) 強 ("土本 (Florian) 強)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3063] x64 linux上のSqueakVM
Message-ID: <20060719190116.9C5F.FLORIAN@seagreen.ocn.ne.jp>

　こんにちは。土本( Florian )です。

　このたび、64bitCPU(EM64TのCeleron)のサーバーを導入することになり、せっ
かくなので、Fedora Core 5のx64版をOSとして使うことにしました。
　このサーバー上でSwikiとSeasideを動かそうと思っているのですが、現在、
Linux用SqueakVMはx64 Linux環境で動作するのでしょうか？

　一応、ftp.squeak.orgのFTPサイトをのぞいてみたのですが、少なくとも
Squeak-3.7-6665に関してはi686-linux版しかありませんでした。
　ソースからリコンパイルすれば、動かないことはないのかもしれませんが、も
しどこかで「動いた」という実績がある、もしくは「動いた」という情報を聞い
たことがあるのでしたら、教えて頂けると幸いです。

　では、失礼します。

-----------------------------------------------------------------
ゲーム製作工房パイディア(Paidia)
       土本( Florian )強
mailto:  florian@seagreen.ocn.ne.jp
webto:   http://florianswiki.dyndns.org/Web/
phoneto: (03)5724-5688
=================================================================


From tar_zcvf ＠ yahoo.co.jp  Wed Jul 19 19:26:33 2006
From: tar_zcvf ＠ yahoo.co.jp (鈴木 藍)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3064] Re: x64 linux上のSqueakVM
In-Reply-To: <20060719190116.9C5F.FLORIAN@seagreen.ocn.ne.jp>
References: <20060719190116.9C5F.FLORIAN@seagreen.ocn.ne.jp>
Message-ID: <20060719192633.77e96160.tar_zcvf@yahoo.co.jp>


  こんにちは。鈴木 藍と申します。
 
> 　このたび、64bitCPU(EM64TのCeleron)のサーバーを導入することになり、せっ
> かくなので、Fedora Core 5のx64版をOSとして使うことにしました。
> 　このサーバー上でSwikiとSeasideを動かそうと思っているのですが、現在、
> Linux用SqueakVMはx64 Linux環境で動作するのでしょうか？

  ここにいろいろありましたよ。
  http://www.squeakvm.org/squeak64/


//鈴木 藍

-- tar_zcvf@yahoo.co.jp

From "土本 (Florian) 強  Wed Jul 19 19:33:48 2006
From: "土本 (Florian) 強 ("土本 (Florian) 強)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3065] Re: x64 linux上のSqueakVM
In-Reply-To: <20060719192633.77e96160.tar_zcvf@yahoo.co.jp>
References: <20060719190116.9C5F.FLORIAN@seagreen.ocn.ne.jp>
	<20060719192633.77e96160.tar_zcvf@yahoo.co.jp>
Message-ID: <20060719193231.9C62.FLORIAN@seagreen.ocn.ne.jp>

　こんにちは。土本( Florian )です。

メール「[Squeak-ja: 3064] Re: x64 linux上のSqueakVM」(2006/07/19 19:26) に於いて
「鈴木 藍」 語りて曰く、

鈴木> > 　このたび、64bitCPU(EM64TのCeleron)のサーバーを導入することになり、せっ
鈴木> > かくなので、Fedora Core 5のx64版をOSとして使うことにしました。
鈴木> > 　このサーバー上でSwikiとSeasideを動かそうと思っているのですが、現在、
鈴木> > Linux用SqueakVMはx64 Linux環境で動作するのでしょうか？
鈴木> 
鈴木>   ここにいろいろありましたよ。
鈴木>   http://www.squeakvm.org/squeak64/

　ありがとうございます。早速見てみます。
　squeakvm.orgというドメインをはじめて知りました。せっかくですのでいろい
ろ見て回りたいと思います。

　では、失礼します。

-----------------------------------------------------------------
ゲーム製作工房パイディア(Paidia)
       土本( Florian )強
mailto:  florian@seagreen.ocn.ne.jp
webto:   http://florianswiki.dyndns.org/Web/
phoneto: (03)5724-5688
=================================================================


From kubo-o ＠ mbox.kyoto-inet.or.jp  Wed Jul 19 21:56:40 2006
From: kubo-o ＠ mbox.kyoto-inet.or.jp (kubo-o)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3066] KJ法のつづき
Message-ID: <BIEDLAGDKLHEABOHHEOHGEKPCBAA.kubo-o@mbox.kyoto-inet.or.jp>

先日来KJ法に挑戦している者です。
KJ法で書くカードをPluggableTextMorph（cardと呼んでいます）で作ります。
cardを出して書き込んで、つまんで画面上で集めます。
そこで、不要なcardは消したいのですが、その方法がわかりません。

PluggableTextMorphの右上のボタンをクリックして出すlistMenuで
以下のように２つの動作をさせたいのです。
一つ目のdeleteはうまくいきます。
二つ目はcard分類のためにPluggableTextMorphの
色を変えるためのものです。
この中で使っている#setColor: は
PluggableTextMorphのビューワーを出して
そこで色を変えるという動作のコードを見て知った
ものですが、うまく動きません。
どうかよろしくお願い致します。

listMenu: aMenu
     | differentMenu  |
	differentMenu _ MenuMorph new.
	differentMenu
	　　add: 'deleteCard' target: t2 action: #delete;
           　　 add: 'cardColor' target: t2 action: #setColor: Color white;
	^ differentMenu.
久保　道



From sumi ＠ seagreen.ocn.ne.jp  Thu Jul 20 16:32:52 2006
From: sumi ＠ seagreen.ocn.ne.jp (Masato Sumi)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3067] Re: KJ法のつづき
In-Reply-To: <BIEDLAGDKLHEABOHHEOHGEKPCBAA.kubo-o@mbox.kyoto-inet.or.jp>
References: <BIEDLAGDKLHEABOHHEOHGEKPCBAA.kubo-o@mbox.kyoto-inet.or.jp>
Message-ID: <86c0320c0607200032x6648e9dck868e0076d2f8d831@mail.gmail.com>

久保さん、ごきげんよう。鷲見です。

> PluggableTextMorphのビューワーを出して
> そこで色を変えるという動作のコードを見て知った
> ものですが、うまく動きません。

#setColor: の代わりに #color: を使ってみてはいかがでしょうか。

ちなみにビューワは、モーフではなく、それをコスチュームとしている
プレイヤというオブジェクトに対してメッセージングやプログラミングを
行なうためのツールなので、そこで使われている setColor: aColor という
メッセージをモーフに送っても、モーフのほうではそれをうまく処理できず、
エラーになったものと思われます。参考まで。

-- 
Masato Sumi

From kubo-o ＠ mbox.kyoto-inet.or.jp  Thu Jul 20 20:02:08 2006
From: kubo-o ＠ mbox.kyoto-inet.or.jp (kubo-o)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3068] Re: KJ法のつづき
In-Reply-To: <86c0320c0607200032x6648e9dck868e0076d2f8d831@mail.gmail.com>
Message-ID: <BIEDLAGDKLHEABOHHEOHAELBCBAA.kubo-o@mbox.kyoto-inet.or.jp>

鷲見さん、いつもありがとうございます。
早速やってみました。
が、下記ではいまくいきません。
listMenu: aMenu
     | differentMenu  |
	differentMenu _ MenuMorph new.
	differentMenu
	　add: 'deleteCard' target: t2 action: #delete;
          　　add: 'cardColor' target: t2 action:#color white;
	^ differentMenu.
追記：前回のメールで
>そこで、不要なcardは消したいのですが、その方法がわかりません。
とありますのは、「そこで、cardの色を変えたいのですが、その方法がわかりませ
ん。」の間違いでした。

-----Original Message-----
From: squeak-ja-bounces@smalltalk.jp
[mailto:squeak-ja-bounces@smalltalk.jp]On Behalf Of Masato Sumi
Sent: Thursday, July 20, 2006 4:33 PM
To: Squeak discussion in Japanese
Subject: [Squeak-ja: 3067] Re: KJ法のつづき


久保さん、ごきげんよう。鷲見です。

> PluggableTextMorphのビューワーを出して
> そこで色を変えるという動作のコードを見て知った
> ものですが、うまく動きません。

#setColor: の代わりに #color: を使ってみてはいかがでしょうか。

ちなみにビューワは、モーフではなく、それをコスチュームとしている
プレイヤというオブジェクトに対してメッセージングやプログラミングを
行なうためのツールなので、そこで使われている setColor: aColor という
メッセージをモーフに送っても、モーフのほうではそれをうまく処理できず、
エラーになったものと思われます。参考まで。

--
Masato Sumi


From scriptonwikipage ＠ yahoo.co.jp  Fri Jul 21 03:05:59 2006
From: scriptonwikipage ＠ yahoo.co.jp (NAKATA, Shunsuke)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3069] Re: Wiki としての SuperSwiki
In-Reply-To: <uu05g4zgw.wl%yoshiki@squeakland.org>
References: <20060711220016.F703.KOUBO2006@yengawa.jpn.org>	<44B3EEC1.30908@yahoo.co.jp>	<20060712171106.F710.KOUBO2006@yengawa.jpn.org>	<44B654AD.6070609@yahoo.co.jp>	<JW200607141013258.7615359@mars.dti.ne.jp>	<44B952B5.2090702@yahoo.co.jp>	<JR2006071614363812.5933109@mars.dti.ne.jp>	<44BA10B7.2030401@yahoo.co.jp>
	<uu05g4zgw.wl%yoshiki@squeakland.org>
Message-ID: <44BFC607.4040703@yahoo.co.jp>

中田です。おおしまさん、返信ありがとうございます。

既にそのようなシステムが作られつつあるのですね。

いろいろな案がありましたので、全部まとめると、、、

今後望まれるソフトウェア環境は:

1. 全体の機能を停止するこなく少しずつ成長していく。(Wiki)

2. 成長の過程は、相互不認知の不特定多数により非同期になされる。(Wiki)

3. Webブラウザーで閲覧できる。(Seaside, Wiki, YouOS)

4. Webブラウザーで編集できる。(Wiki, YouOS)

5. 高階関数やテンプレートなど、アルゴリズム抽象をサポートする。(Haskell,
LISP,Ada,C++)

6. 同時性をサポートする。(SqSquare, Kansas)

7. ポートレットもある。それが知的エージェントであればなおよい。(Oracle,
Swimmy)

8. その中の部品はサイトを超えて使うことができる。(W3C, OpenDoc, Web2.0)

9. システム自身に変更履歴を管理する機能がある。(Wiki)

10. システム内の資源はすべてオブジェクトであり、ソフトウェアの操作の対象
になり得る。(LISP, Smalltalk)

11. 視覚的に操作できる。(eToys, MindStorm, Simulink)

12. セキュリティの機能がある。核となるものや重要なものには鍵をかけられ、
また、外因性のウィルスに対して耐性がある。(Java Applet, eToys)

13. (自動)負荷分散の機能がある。(複数のサーバー間また、サーバーとクライ
アント間で。) (Mach, Amoeba; CGI, Java Servlet, JavaScript, Java Applet,
Flash, thin client)

(括弧内は関連する語。)


思いつくままに書きましたが、他に付け足すものはありませんか？

これらを総合するとどんな全体像になるかは、いまいち想像しにくいですが、
アイデアをどんどん出すのは、ブレインストーミングじゃないですが、
新しい可能性や方向性を示すきっかけになると思います。

何かご意見あれば、いただけるとうれしく思います。


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
おおしまです。

>> SqSquare や Kansas はこの様な形態のソフトウェア環境ではない
>> でしょうから、その意味では、私が言っている「協調作業」という
>> 言葉とは違うものかもしれません。ですが、同時性という概念は、
>> 上述の概念と矛盾しない直交するものですので、今後のソフトウェア
>> のあり方として両者が融合する形で発展することもあり得ますね。

  話がいつ出るかいつ出るかと思っていましたが、別の、というかSqSquareと
将来組み合わされるものとして、WysiWikiという仮称で呼ばれている機能を実
現したTinLizzieというシステムも開発中です。これは、eToysのようなタイプ
のコンテンツをwebにおき、そのコンテンツを名前の通りに非同期的に編集で
きるようにしてお互いの間をハイパーリンクでつなぐこともできるというもの
です。

  利点としては、非同期な協調をしつつ、SqSquareでそのままつながって同期
的にもなれる、というあたりを狙っています。

-- Yoshiki


--------------------------------------
Let's start Yahoo! Auction  -  Free Campaign Now!
http://pr.mail.yahoo.co.jp/auction/

From umejava ＠ mars.dti.ne.jp  Tue Jul 25 17:58:26 2006
From: umejava ＠ mars.dti.ne.jp (Masashi Umezawa)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3070] じゃんけん2.0参加者募集中
Message-ID: <JR200607251758264.6386625@mars.dti.ne.jp>

こんにちは
梅澤です。

さて、8/26(土)開催のLightweight Language Ringですが、
「じゃんけん2.0」の参加者をまだまだ募集しています。

http://ll.jus.or.jp/2006/event/janken

Squeakで、出てみたいという方は、ぜひ名乗りを上げていただければと
思います。このMLもしくは私宛にメールください。

今のところ、Squeak陣営は私と南谷君のLanguage Updateでの発表しか
ありませんので、ちょっと印象の薄いことになってしまいそうです。
Squeakラブのある方、ぜひどうぞ。

ではでは。
---
[:masashi | ^umezawa]

From abee ＠ squeakland.jp  Fri Jul 28 21:19:20 2006
From: abee ＠ squeakland.jp (Kazuhiro ABE)
Date: Thu Dec  6 11:03:32 2007
Subject: [Squeak-ja: 3071] アスキー・ドット PC 9 月号にスクイークの記事
Message-ID: <44CA00C871.69EDABEE@smtp.nifty.com>

阿部@新百合です。
私はまだ読んでいないのですが、7/24発売のアスキー・ドットPC 2006年9月号の
別冊付録「夏休み「はなまる」ハンドブック2006年版」に「絵で描いたクルマが
走る！」として、スクイークが紹介されているようです。

http://asciidotpc.jp/dlnew/new/
http://asciidotpc.jp/dlnew/new/links_bf.htm

 //abee
--
阿部 和広  EMAIL abee@squeakland.jp

