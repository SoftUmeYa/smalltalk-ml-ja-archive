MessageNotUnderstood: UndefinedObject>>third22 October 2007 5:40:45 pmVM: unix - a SmalltalkImageImage: Squeak3.9 [latest update: #7067]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir /home/Sho/Desktop/squeakTrusted Dir /home/Sho/Desktop/squeak/secureUntrusted Dir /home/Sho/Desktop/squeak/My SqueakUndefinedObject(Object)>>doesNotUnderstand: #third	Receiver: nil	Arguments and temporary variables: 		aMessage: 	third	Receiver's instance variables: nil[] in UnixUTF8JPInputInterpreter>>nextCharFrom:firstEvt: {[aCollection add: sensor nextEvent third asCharacter]}	Arguments and temporary variables: 		sensor: 	an EventSensor		evtBuf: 	#(2 44183 129 0 0 0 0 0)		firstChar: 	$		aCollection: 	an OrderedCollection($ $)		bytes: 	3		peekEvent: 	#(2 44183 130 0 0 0 0 0)		keyValue: 	129		type: 	#keystroke		stream: 	nil		multiChar: 	nilSmallInteger(Integer)>>timesRepeat:	Receiver: 3	Arguments and temporary variables: 		aBlock: 	[] in UnixUTF8JPInputInterpreter>>nextCharFrom:firstEvt: {[aCollection ...etc...		count: 	2	Receiver's instance variables: 3UnixUTF8JPInputInterpreter>>nextCharFrom:firstEvt:	Receiver: an UnixUTF8JPInputInterpreter	Arguments and temporary variables: 		sensor: 	an EventSensor		evtBuf: 	#(2 44183 129 0 0 0 0 0)		firstChar: 	$		aCollection: 	an OrderedCollection($ $)		bytes: 	3		peekEvent: 	#(2 44183 130 0 0 0 0 0)		keyValue: 	129		type: 	#keystroke		stream: 	nil		multiChar: 	nil	Receiver's instance variables: 		converter: 	an UTF8TextConverter--- The full stack ---UndefinedObject(Object)>>doesNotUnderstand: #third[] in UnixUTF8JPInputInterpreter>>nextCharFrom:firstEvt: {[aCollection add: sensor nextEvent third asCharacter]}SmallInteger(Integer)>>timesRepeat:UnixUTF8JPInputInterpreter>>nextCharFrom:firstEvt: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -HandMorph>>generateKeyboardEvent:HandMorph>>processEvents[] in WorldState>>doOneCycleNowFor: {[:h |  ActiveHand := h.  h processEvents.  capturingGesture := capturingGest...]}Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:PasteUpMorph>>doOneCycle[] in Project class>>spawnNewProcess {[[World doOneCycle.  Processor yield.  false] whileFalse.  nil]}[] in BlockContext>>newProcess {[self value.  Processor terminateActive]}