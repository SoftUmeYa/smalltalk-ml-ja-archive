MessageNotUnderstood: PackageInfo>>postscript27 October 2007 10:35:37 pmVM: Mac OS - a SmalltalkImageImage: Squeak3.9 [latest update: #7067]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir /Users/sho/Squeak/Squeak3.9-7067Trusted Dir /Users/sho/Squeak/Squeak3.9-7067Untrusted Dir /Users/sho/Library/Preferences/Squeak/Internet/My SqueakPackageInfo(Object)>>doesNotUnderstand: #postscript	Receiver: a PackageInfo	Arguments and temporary variables: 		aMessage: 	postscript	Receiver's instance variables: 		packageName: 	'SCL'		methodCategoryPrefix: 	'*scl'MCWorkingCopyBrowser>>editScript:	Receiver: a MCWorkingCopyBrowser	Arguments and temporary variables: 		scriptSymbol: 	#postscript		script: 	nil	Receiver's instance variables: 		morph: 	nil		label: 	nil		modal: 	false		modalValue: 	nil		workingCopy: 	a MCWorkingCopy		workingCopyWrapper: 	nil		repository: 	a MCDirectoryRepository(/Users/sho/Squeak/Squeak3.9-7067)		defaults: 	a Dictionary(a MCWorkingCopy->a MCDirectoryRepository(/Users/sho/Sque...etc...[] in MenuItemMorph>>invokeWithEvent: {[(selArgCount := selector numArgs) = 0   ifTrue: [target perform: selector] ...]}	Arguments and temporary variables: 		evt: 	[450@375 mouseUp 82491]		selArgCount: 	1		w: 	a PasteUpMorph(1622) [world]BlockContext>>ensure:	Receiver: [] in MenuItemMorph>>invokeWithEvent: {[(selArgCount := selector numArgs) = 0   ifTrue: [t...etc...	Arguments and temporary variables: 		aBlock: 	[] in CursorWithMask(Cursor)>>showWhile: {[oldcursor show]}		returnValue: 	nil		b: 	nil	Receiver's instance variables: 		sender: 	BlockContext>>ensure:		pc: 	153		stackp: 	0		nargs: 	0		startpc: 	132		home: 	MenuItemMorph>>invokeWithEvent:--- The full stack ---PackageInfo(Object)>>doesNotUnderstand: #postscriptMCWorkingCopyBrowser>>editScript:[] in MenuItemMorph>>invokeWithEvent: {[(selArgCount := selector numArgs) = 0   ifTrue: [target perform: selector] ...]}BlockContext>>ensure: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -CursorWithMask(Cursor)>>showWhile:MenuItemMorph>>invokeWithEvent:MenuItemMorph>>mouseUp:MenuItemMorph>>handleMouseUp:MouseButtonEvent>>sentTo:MenuItemMorph(Morph)>>handleEvent:MorphicEventDispatcher>>dispatchDefault:with:MorphicEventDispatcher>>dispatchEvent:with:MenuItemMorph(Morph)>>processEvent:using:MorphicEventDispatcher>>dispatchDefault:with:MorphicEventDispatcher>>dispatchEvent:with:MenuMorph(Morph)>>processEvent:using:MenuMorph(Morph)>>processEvent:MenuMorph>>handleFocusEvent:[] in HandMorph>>sendFocusEvent:to:clear: {[ActiveHand := self.  ActiveEvent := anEvent.  result := focusHolder     han...]}[] in PasteUpMorph>>becomeActiveDuring: {[aBlock value]}BlockContext>>on:do:PasteUpMorph>>becomeActiveDuring:HandMorph>>sendFocusEvent:to:clear:HandMorph>>sendEvent:focus:clear:HandMorph>>sendMouseEvent:HandMorph>>handleEvent:HandMorph>>processEvents[] in WorldState>>doOneCycleNowFor: {[:h |  ActiveHand := h.  h processEvents.  capturingGesture := capturingGest...]}Array(SequenceableCollection)>>do:WorldState>>handsDo:WorldState>>doOneCycleNowFor:WorldState>>doOneCycleFor:PasteUpMorph>>doOneCycle[] in Project class>>spawnNewProcess {[[World doOneCycle.  Processor yield.  false] whileFalse.  nil]}[] in BlockContext>>newProcess {[self value.  Processor terminateActive]}