Error: Fully qualified path expected9 April 2005 6:36:38 pmVM: Win32 - a SmalltalkImageImage: Squeakland.396-Nihongo7.29 [latest update: #91]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir C:\My Squeak\abeeTrusted Dir C:\Program Files\Squeak\SqueakNihongo7\abeeUntrusted Dir C:\My Squeak\abeeDosFileDirectory(Object)>>error:	Receiver: <<error during printing>>	Arguments and temporary variables: 		t1: 	'Fully qualified path expected'	Receiver's instance variables: 		pathName: 	nilDosFileDirectory>>setPathName:	Receiver: <<error during printing>>	Arguments and temporary variables: 		t1: 	'Files\Squeak\SqueakNihongo7\SqueakPlugin.image'	Receiver's instance variables: 		pathName: 	nilFileDirectory class>>on:	Receiver: FileDirectory	Arguments and temporary variables: 		t1: 	'Files\Squeak\SqueakNihongo7\SqueakPlugin.image'		t2: 	'Files\Squeak\SqueakNihongo7\SqueakPlugin.image'	Receiver's instance variables: 		superclass: 	Object		methodDict: 	a MethodDictionary(#acceptsUploads->a CompiledMethod (3047) #asUrl-...etc...		format: 	132		instanceVariables: 	#('pathName')		organization: 	('path access' fullPathFor: on: pathName pathNameDelimiter pathPa...etc...		subclasses: 	#(UnixFileDirectory AcornFileDirectory MacFileDirectory DosFileDire...etc...		name: 	#FileDirectory		classPool: 	a Dictionary(#DefaultDirectory->DosFileDirectory on 'C:\My Squeak\ab...etc...		sharedPools: 	nil		environment: 	a SystemDictionary(lots of globals)		category: 	nil[] in FileUrl>>retrieveContents {[(FileDirectory on: t2) entries]}	Arguments and temporary variables: 		t1: 	nil		t2: 	'Files\Squeak\SqueakNihongo7\SqueakPlugin.image'		t3: 	nil		t4: 	nil		t5: 	nil		t6: 	FileDoesNotExistException: 'C:\My Squeak\abee\Files\Squeak\SqueakNihongo7\S...etc...		t7: 	nil--- The full stack ---DosFileDirectory(Object)>>error:DosFileDirectory>>setPathName:FileDirectory class>>on:[] in FileUrl>>retrieveContents {[(FileDirectory on: t2) entries]} - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -BlockContext>>on:do:FileUrl>>retrieveContentsHTTPDownloadRequest>>startRetrieval[] in HTTPLoader>>startDownload {[self nextRequest startRetrieval]}BlockContext>>on:do:[] in HTTPLoader>>startDownload {[[self nextRequest startRetrieval]   on: FTPConnectionException   do: [:t2 |...]}[] in BlockContext>>newProcess {[self value.  Processor terminateActive]}